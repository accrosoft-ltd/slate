{"version":3,"file":"index.js","sources":["../../../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../src/utils/key.ts","../src/utils/weak-maps.ts","../src/utils/dom.ts","../src/plugin/react-editor.ts","../src/hooks/use-focused.ts","../src/hooks/use-editor.tsx","../src/hooks/use-slate.tsx","../src/components/slate.tsx","../src/hooks/use-read-only.ts","../src/hooks/use-selected.ts","../src/plugin/with-react.ts","../src/components/string.tsx","../src/components/leaf.tsx","../src/hooks/use-isomorphic-layout-effect.ts","../src/components/text.tsx","../src/components/element.tsx","../src/components/children.tsx","../src/utils/environment.ts","../src/utils/hotkeys.ts","../src/components/editable.tsx"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","/**\r\n * An auto-incrementing identifier for keys.\r\n */\r\n\r\nlet n = 0\r\n\r\n/**\r\n * A class that keeps track of a key string. We use a full class here because we\r\n * want to be able to use them as keys in `WeakMap` objects.\r\n */\r\n\r\nexport class Key {\r\n  id: string\r\n\r\n  constructor() {\r\n    this.id = `${n++}`\r\n  }\r\n}\r\n","import { Node, Ancestor, Editor, Range } from 'slate'\r\n\r\nimport { Key } from './key'\r\n\r\n/**\r\n * Two weak maps that allow us rebuild a path given a node. They are populated\r\n * at render time such that after a render occurs we can always backtrack.\r\n */\r\n\r\nexport const NODE_TO_INDEX: WeakMap<Node, number> = new WeakMap()\r\nexport const NODE_TO_PARENT: WeakMap<Node, Ancestor> = new WeakMap()\r\n\r\n/**\r\n * Weak maps that allow us to go between Slate nodes and DOM nodes. These\r\n * are used to resolve DOM event-related logic into Slate actions.\r\n */\r\n\r\nexport const EDITOR_TO_ELEMENT: WeakMap<Editor, HTMLElement> = new WeakMap()\r\nexport const EDITOR_TO_PLACEHOLDER: WeakMap<Editor, string> = new WeakMap()\r\nexport const ELEMENT_TO_NODE: WeakMap<HTMLElement, Node> = new WeakMap()\r\nexport const KEY_TO_ELEMENT: WeakMap<Key, HTMLElement> = new WeakMap()\r\nexport const NODE_TO_ELEMENT: WeakMap<Node, HTMLElement> = new WeakMap()\r\nexport const NODE_TO_KEY: WeakMap<Node, Key> = new WeakMap()\r\n\r\n/**\r\n * Weak maps for storing editor-related state.\r\n */\r\n\r\nexport const IS_READ_ONLY: WeakMap<Editor, boolean> = new WeakMap()\r\nexport const IS_FOCUSED: WeakMap<Editor, boolean> = new WeakMap()\r\nexport const IS_DRAGGING: WeakMap<Editor, boolean> = new WeakMap()\r\nexport const IS_CLICKING: WeakMap<Editor, boolean> = new WeakMap()\r\n\r\n/**\r\n * Weak map for associating the context `onChange` context with the plugin.\r\n */\r\n\r\nexport const EDITOR_TO_ON_CHANGE = new WeakMap<Editor, () => void>()\r\n\r\n/**\r\n * Symbols.\r\n */\r\n\r\nexport const PLACEHOLDER_SYMBOL = (Symbol('placeholder') as unknown) as string\r\n","/**\r\n * Types.\r\n */\r\n\r\n// COMPAT: This is required to prevent TypeScript aliases from doing some very\r\n// weird things for Slate's types with the same name as globals. (2019/11/27)\r\n// https://github.com/microsoft/TypeScript/issues/35002\r\nimport DOMNode = globalThis.Node\r\nimport DOMComment = globalThis.Comment\r\nimport DOMElement = globalThis.Element\r\nimport DOMText = globalThis.Text\r\nimport DOMRange = globalThis.Range\r\nimport DOMSelection = globalThis.Selection\r\nimport DOMStaticRange = globalThis.StaticRange\r\nexport {\r\n  DOMNode,\r\n  DOMComment,\r\n  DOMElement,\r\n  DOMText,\r\n  DOMRange,\r\n  DOMSelection,\r\n  DOMStaticRange,\r\n}\r\n\r\nexport type DOMPoint = [Node, number]\r\n\r\n/**\r\n * Check if a DOM node is a comment node.\r\n */\r\n\r\nexport const isDOMComment = (value: any): value is DOMComment => {\r\n  return isDOMNode(value) && value.nodeType === 8\r\n}\r\n\r\n/**\r\n * Check if a DOM node is an element node.\r\n */\r\n\r\nexport const isDOMElement = (value: any): value is DOMElement => {\r\n  return isDOMNode(value) && value.nodeType === 1\r\n}\r\n\r\n/**\r\n * Check if a value is a DOM node.\r\n */\r\n\r\nexport const isDOMNode = (value: any): value is DOMNode => {\r\n  return value instanceof Node\r\n}\r\n\r\n/**\r\n * Check if a DOM node is an element node.\r\n */\r\n\r\nexport const isDOMText = (value: any): value is DOMText => {\r\n  return isDOMNode(value) && value.nodeType === 3\r\n}\r\n\r\n/**\r\n * Checks whether a paste event is a plaintext-only event.\r\n */\r\n\r\nexport const isPlainTextOnlyPaste = (event: ClipboardEvent) => {\r\n  return (\r\n    event.clipboardData &&\r\n    event.clipboardData.getData('text/plain') !== '' &&\r\n    event.clipboardData.types.length === 1\r\n  )\r\n}\r\n\r\n/**\r\n * Normalize a DOM point so that it always refers to a text node.\r\n */\r\n\r\nexport const normalizeDOMPoint = (domPoint: DOMPoint): DOMPoint => {\r\n  let [node, offset] = domPoint\r\n\r\n  // If it's an element node, its offset refers to the index of its children\r\n  // including comment nodes, so try to find the right text child node.\r\n  if (isDOMElement(node) && node.childNodes.length) {\r\n    const isLast = offset === node.childNodes.length\r\n    const direction = isLast ? 'backward' : 'forward'\r\n    const index = isLast ? offset - 1 : offset\r\n    node = getEditableChild(node, index, direction)\r\n\r\n    // If the node has children, traverse until we have a leaf node. Leaf nodes\r\n    // can be either text nodes, or other void DOM nodes.\r\n    while (isDOMElement(node) && node.childNodes.length) {\r\n      const i = isLast ? node.childNodes.length - 1 : 0\r\n      node = getEditableChild(node, i, direction)\r\n    }\r\n\r\n    // Determine the new offset inside the text node.\r\n    offset = isLast && node.textContent != null ? node.textContent.length : 0\r\n  }\r\n\r\n  // Return the node and offset.\r\n  return [node, offset]\r\n}\r\n\r\n/**\r\n * Get the nearest editable child at `index` in a `parent`, preferring\r\n * `direction`.\r\n */\r\n\r\nexport const getEditableChild = (\r\n  parent: DOMElement,\r\n  index: number,\r\n  direction: 'forward' | 'backward'\r\n): DOMNode => {\r\n  const { childNodes } = parent\r\n  let child = childNodes[index]\r\n  let i = index\r\n  let triedForward = false\r\n  let triedBackward = false\r\n\r\n  // While the child is a comment node, or an element node with no children,\r\n  // keep iterating to find a sibling non-void, non-comment node.\r\n  while (\r\n    isDOMComment(child) ||\r\n    (isDOMElement(child) && child.childNodes.length === 0) ||\r\n    (isDOMElement(child) && child.getAttribute('contenteditable') === 'false')\r\n  ) {\r\n    if (triedForward && triedBackward) {\r\n      break\r\n    }\r\n\r\n    if (i >= childNodes.length) {\r\n      triedForward = true\r\n      i = index - 1\r\n      direction = 'backward'\r\n      continue\r\n    }\r\n\r\n    if (i < 0) {\r\n      triedBackward = true\r\n      i = index + 1\r\n      direction = 'forward'\r\n      continue\r\n    }\r\n\r\n    child = childNodes[i]\r\n    i += direction === 'forward' ? 1 : -1\r\n  }\r\n\r\n  return child\r\n}\r\n\r\n/**\r\n * Get a plaintext representation of the content of a node, accounting for block\r\n * elements which get a newline appended.\r\n *\r\n * The domNode must be attached to the DOM.\r\n */\r\n\r\nexport const getPlainText = (domNode: DOMNode) => {\r\n  let text = ''\r\n\r\n  if (isDOMText(domNode) && domNode.nodeValue) {\r\n    return domNode.nodeValue\r\n  }\r\n\r\n  if (isDOMElement(domNode)) {\r\n    for (const childNode of Array.from(domNode.childNodes)) {\r\n      text += getPlainText(childNode)\r\n    }\r\n\r\n    const display = getComputedStyle(domNode).getPropertyValue('display')\r\n\r\n    if (display === 'block' || display === 'list' || domNode.tagName === 'BR') {\r\n      text += '\\n'\r\n    }\r\n  }\r\n\r\n  return text\r\n}\r\n","import { Editor, Node, Path, Point, Range, Transforms } from 'slate'\r\n\r\nimport { Key } from '../utils/key'\r\nimport {\r\n  EDITOR_TO_ELEMENT,\r\n  ELEMENT_TO_NODE,\r\n  IS_FOCUSED,\r\n  IS_READ_ONLY,\r\n  KEY_TO_ELEMENT,\r\n  NODE_TO_INDEX,\r\n  NODE_TO_KEY,\r\n  NODE_TO_PARENT,\r\n} from '../utils/weak-maps'\r\nimport {\r\n  DOMElement,\r\n  DOMNode,\r\n  DOMPoint,\r\n  DOMRange,\r\n  DOMSelection,\r\n  DOMStaticRange,\r\n  isDOMElement,\r\n  normalizeDOMPoint,\r\n} from '../utils/dom'\r\n\r\n/**\r\n * A React and DOM-specific version of the `Editor` interface.\r\n */\r\n\r\nexport interface ReactEditor extends Editor {\r\n  insertData: (data: DataTransfer) => void\r\n  setFragmentData: (data: DataTransfer) => void\r\n}\r\n\r\nexport const ReactEditor = {\r\n  /**\r\n   * Find a key for a Slate node.\r\n   */\r\n\r\n  findKey(editor: ReactEditor, node: Node): Key {\r\n    let key = NODE_TO_KEY.get(node)\r\n\r\n    if (!key) {\r\n      key = new Key()\r\n      NODE_TO_KEY.set(node, key)\r\n    }\r\n\r\n    return key\r\n  },\r\n\r\n  /**\r\n   * Find the path of Slate node.\r\n   */\r\n\r\n  findPath(editor: ReactEditor, node: Node): Path {\r\n    const path: Path = []\r\n    let child = node\r\n\r\n    while (true) {\r\n      const parent = NODE_TO_PARENT.get(child)\r\n\r\n      if (parent == null) {\r\n        if (Editor.isEditor(child)) {\r\n          return path\r\n        } else {\r\n          break\r\n        }\r\n      }\r\n\r\n      const i = NODE_TO_INDEX.get(child)\r\n\r\n      if (i == null) {\r\n        break\r\n      }\r\n\r\n      path.unshift(i)\r\n      child = parent\r\n    }\r\n\r\n    throw new Error(\r\n      `Unable to find the path for Slate node: ${JSON.stringify(node)}`\r\n    )\r\n  },\r\n\r\n  /**\r\n   * Check if the editor is focused.\r\n   */\r\n\r\n  isFocused(editor: ReactEditor): boolean {\r\n    return !!IS_FOCUSED.get(editor)\r\n  },\r\n\r\n  /**\r\n   * Check if the editor is in read-only mode.\r\n   */\r\n\r\n  isReadOnly(editor: ReactEditor): boolean {\r\n    return !!IS_READ_ONLY.get(editor)\r\n  },\r\n\r\n  /**\r\n   * Blur the editor.\r\n   */\r\n\r\n  blur(editor: ReactEditor): void {\r\n    const el = ReactEditor.toDOMNode(editor, editor)\r\n    if (!el) {\r\n      return\r\n    }\r\n    IS_FOCUSED.set(editor, false)\r\n\r\n    if (window.document.activeElement === el) {\r\n      el.blur()\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Focus the editor.\r\n   */\r\n\r\n  focus(editor: ReactEditor): void {\r\n    const el = ReactEditor.toDOMNode(editor, editor)\r\n    if (!el) {\r\n      return\r\n    }\r\n    IS_FOCUSED.set(editor, true)\r\n\r\n    if (window.document.activeElement !== el) {\r\n      el.focus({ preventScroll: true })\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Deselect the editor.\r\n   */\r\n\r\n  deselect(editor: ReactEditor): void {\r\n    const { selection } = editor\r\n    const domSelection = window.getSelection()\r\n\r\n    if (domSelection && domSelection.rangeCount > 0) {\r\n      domSelection.removeAllRanges()\r\n    }\r\n\r\n    if (selection) {\r\n      Transforms.deselect(editor)\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Check if a DOM node is within the editor.\r\n   */\r\n\r\n  hasDOMNode(\r\n    editor: ReactEditor,\r\n    target: DOMNode,\r\n    options: { editable?: boolean } = {}\r\n  ): boolean {\r\n    const { editable = false } = options\r\n    const editorEl = ReactEditor.toDOMNode(editor, editor)\r\n    if (!editorEl) {\r\n      return false\r\n    }\r\n    let targetEl\r\n\r\n    // COMPAT: In Firefox, reading `target.nodeType` will throw an error if\r\n    // target is originating from an internal \"restricted\" element (e.g. a\r\n    // stepper arrow on a number input). (2018/05/04)\r\n    // https://github.com/ianstormtaylor/slate/issues/1819\r\n    try {\r\n      targetEl = (isDOMElement(target)\r\n        ? target\r\n        : target.parentElement) as HTMLElement\r\n    } catch (err) {\r\n      if (\r\n        !err.message.includes('Permission denied to access property \"nodeType\"')\r\n      ) {\r\n        throw err\r\n      }\r\n    }\r\n\r\n    if (!targetEl) {\r\n      return false\r\n    }\r\n\r\n    return (\r\n      targetEl.closest(`[data-slate-editor]`) === editorEl &&\r\n      (!editable ||\r\n        targetEl.isContentEditable ||\r\n        !!targetEl.getAttribute('data-slate-zero-width'))\r\n    )\r\n  },\r\n\r\n  /**\r\n   * Insert data from a `DataTransfer` into the editor.\r\n   */\r\n\r\n  insertData(editor: ReactEditor, data: DataTransfer): void {\r\n    editor.insertData(data)\r\n  },\r\n\r\n  /**\r\n   * Sets data from the currently selected fragment on a `DataTransfer`.\r\n   */\r\n\r\n  setFragmentData(editor: ReactEditor, data: DataTransfer): void {\r\n    editor.setFragmentData(data)\r\n  },\r\n\r\n  /**\r\n   * Find the native DOM element from a Slate node.\r\n   */\r\n\r\n  toDOMNode(editor: ReactEditor, node: Node): HTMLElement | undefined {\r\n    const domNode = Editor.isEditor(node)\r\n      ? EDITOR_TO_ELEMENT.get(editor)\r\n      : KEY_TO_ELEMENT.get(ReactEditor.findKey(editor, node))\r\n\r\n    if (!domNode) {\r\n      // console.warn(\r\n      //   `Cannot resolve a DOM node from Slate node: ${JSON.stringify(node)}`\r\n      // )\r\n    }\r\n\r\n    return domNode\r\n  },\r\n\r\n  /**\r\n   * Find a native DOM selection point from a Slate point.\r\n   */\r\n\r\n  toDOMPoint(editor: ReactEditor, point: Point): DOMPoint | undefined {\r\n    const [node] = Editor.node(editor, point.path)\r\n    const el = ReactEditor.toDOMNode(editor, node)\r\n    if (!el) {\r\n      return\r\n    }\r\n    let domPoint: DOMPoint | undefined\r\n\r\n    // If we're inside a void node, force the offset to 0, otherwise the zero\r\n    // width spacing character will result in an incorrect offset of 1\r\n    if (Editor.void(editor, { at: point })) {\r\n      point = { path: point.path, offset: 0 }\r\n    }\r\n\r\n    // For each leaf, we need to isolate its content, which means filtering\r\n    // to its direct text and zero-width spans. (We have to filter out any\r\n    // other siblings that may have been rendered alongside them.)\r\n    const selector = `[data-slate-string], [data-slate-zero-width]`\r\n    const texts = Array.from(el.querySelectorAll(selector))\r\n    let start = 0\r\n\r\n    for (const text of texts) {\r\n      const domNode = text.childNodes[0] as HTMLElement\r\n\r\n      if (domNode == null || domNode.textContent == null) {\r\n        continue\r\n      }\r\n\r\n      const { length } = domNode.textContent\r\n      const attr = text.getAttribute('data-slate-length')\r\n      const trueLength = attr == null ? length : parseInt(attr, 10)\r\n      const end = start + trueLength\r\n\r\n      if (point.offset <= end) {\r\n        const offset = Math.min(length, Math.max(0, point.offset - start))\r\n        domPoint = [domNode, offset]\r\n        break\r\n      }\r\n\r\n      start = end\r\n    }\r\n\r\n    if (!domPoint) {\r\n      return\r\n      // throw new Error(\r\n      //   `Cannot resolve a DOM point from Slate point: ${JSON.stringify(point)}`\r\n      // )\r\n    }\r\n\r\n    return domPoint\r\n  },\r\n\r\n  /**\r\n   * Find a native DOM range from a Slate `range`.\r\n   */\r\n\r\n  toDOMRange(editor: ReactEditor, range: Range): DOMRange | undefined {\r\n    const { anchor, focus } = range\r\n    const domAnchor = ReactEditor.toDOMPoint(editor, anchor)\r\n    if (!domAnchor) {\r\n      return\r\n    }\r\n    const domFocus = Range.isCollapsed(range)\r\n      ? domAnchor\r\n      : ReactEditor.toDOMPoint(editor, focus)\r\n\r\n    if (!domFocus) {\r\n      return\r\n    }\r\n    const domRange = window.document.createRange()\r\n    const start = Range.isBackward(range) ? domFocus : domAnchor\r\n    const end = Range.isBackward(range) ? domAnchor : domFocus\r\n    domRange.setStart(start[0], start[1])\r\n    domRange.setEnd(end[0], end[1])\r\n    return domRange\r\n  },\r\n\r\n  /**\r\n   * Find a Slate node from a native DOM `element`.\r\n   */\r\n\r\n  toSlateNode(editor: ReactEditor, domNode: DOMNode): Node | null {\r\n    let domEl = isDOMElement(domNode) ? domNode : domNode.parentElement\r\n\r\n    if (domEl && !domEl.hasAttribute('data-slate-node')) {\r\n      domEl = domEl.closest(`[data-slate-node]`)\r\n    }\r\n\r\n    const node = domEl ? ELEMENT_TO_NODE.get(domEl as HTMLElement) : null\r\n\r\n    if (!node) {\r\n      return null\r\n    }\r\n\r\n    return node\r\n  },\r\n\r\n  /**\r\n   * Get the target range from a DOM `event`.\r\n   */\r\n\r\n  findEventRange(editor: ReactEditor, event: any): Range | null {\r\n    if ('nativeEvent' in event) {\r\n      event = event.nativeEvent\r\n    }\r\n\r\n    const { clientX: x, clientY: y, target } = event\r\n\r\n    if (x == null || y == null) {\r\n      return null\r\n      // throw new Error(`Cannot resolve a Slate range from a DOM event: ${event}`)\r\n    }\r\n\r\n    const node = ReactEditor.toSlateNode(editor, event.target)\r\n    if (!node) {\r\n      return null\r\n    }\r\n    const path = ReactEditor.findPath(editor, node)\r\n\r\n    // If the drop target is inside a void node, move it into either the\r\n    // next or previous node, depending on which side the `x` and `y`\r\n    // coordinates are closest to.\r\n    if (Editor.isVoid(editor, node)) {\r\n      const rect = target.getBoundingClientRect()\r\n      const isPrev = editor.isInline(node)\r\n        ? x - rect.left < rect.left + rect.width - x\r\n        : y - rect.top < rect.top + rect.height - y\r\n\r\n      const edge = Editor.point(editor, path, {\r\n        edge: isPrev ? 'start' : 'end',\r\n      })\r\n      const point = isPrev\r\n        ? Editor.before(editor, edge)\r\n        : Editor.after(editor, edge)\r\n\r\n      if (point) {\r\n        const range = Editor.range(editor, point)\r\n        return range\r\n      }\r\n    }\r\n\r\n    // Else resolve a range from the caret position where the drop occured.\r\n    let domRange\r\n    const { document } = window\r\n\r\n    // COMPAT: In Firefox, `caretRangeFromPoint` doesn't exist. (2016/07/25)\r\n    if (document.caretRangeFromPoint) {\r\n      domRange = document.caretRangeFromPoint(x, y)\r\n    } else {\r\n      const position = document.caretPositionFromPoint(x, y)\r\n\r\n      if (position) {\r\n        domRange = document.createRange()\r\n        domRange.setStart(position.offsetNode, position.offset)\r\n        domRange.setEnd(position.offsetNode, position.offset)\r\n      }\r\n    }\r\n\r\n    if (!domRange) {\r\n      return null\r\n      // throw new Error(`Cannot resolve a Slate range from a DOM event: ${event}`)\r\n    }\r\n\r\n    // Resolve a Slate range from the DOM range.\r\n    const range = ReactEditor.toSlateRange(editor, domRange)\r\n\r\n    return range\r\n  },\r\n\r\n  /**\r\n   * Find a Slate point from a DOM selection's `domNode` and `domOffset`.\r\n   */\r\n\r\n  toSlatePoint(editor: ReactEditor, domPoint: DOMPoint): Point | null {\r\n    const [nearestNode, nearestOffset] = normalizeDOMPoint(domPoint)\r\n    const parentNode = nearestNode.parentNode as DOMElement\r\n    let textNode: DOMElement | null = null\r\n    let offset = 0\r\n\r\n    if (parentNode) {\r\n      const voidNode = parentNode.closest('[data-slate-void=\"true\"]')\r\n      let leafNode = parentNode.closest('[data-slate-leaf]')\r\n      let domNode: DOMElement | null = null\r\n\r\n      // Calculate how far into the text node the `nearestNode` is, so that we\r\n      // can determine what the offset relative to the text node is.\r\n      if (leafNode) {\r\n        textNode = leafNode.closest('[data-slate-node=\"text\"]')!\r\n        const range = window.document.createRange()\r\n        range.setStart(textNode, 0)\r\n        range.setEnd(nearestNode, nearestOffset)\r\n        const contents = range.cloneContents()\r\n        const removals = [\r\n          ...contents.querySelectorAll('[data-slate-zero-width]'),\r\n          ...contents.querySelectorAll('[contenteditable=false]'),\r\n        ]\r\n\r\n        removals.forEach(el => {\r\n          el!.parentNode!.removeChild(el)\r\n        })\r\n\r\n        // COMPAT: Edge has a bug where Range.prototype.toString() will\r\n        // convert \\n into \\r\\n. The bug causes a loop when slate-react\r\n        // attempts to reposition its cursor to match the native position. Use\r\n        // textContent.length instead.\r\n        // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10291116/\r\n        offset = contents.textContent!.length\r\n        domNode = textNode\r\n      } else if (voidNode) {\r\n        // For void nodes, the element with the offset key will be a cousin, not an\r\n        // ancestor, so find it by going down from the nearest void parent.\r\n\r\n        leafNode = voidNode.querySelector('[data-slate-leaf]')!\r\n        textNode = leafNode.closest('[data-slate-node=\"text\"]')!\r\n        domNode = leafNode\r\n        offset = domNode.textContent!.length\r\n      }\r\n\r\n      // COMPAT: If the parent node is a Slate zero-width space, editor is\r\n      // because the text node should have no characters. However, during IME\r\n      // composition the ASCII characters will be prepended to the zero-width\r\n      // space, so subtract 1 from the offset to account for the zero-width\r\n      // space character.\r\n      if (\r\n        domNode &&\r\n        offset === domNode.textContent!.length &&\r\n        parentNode.hasAttribute('data-slate-zero-width')\r\n      ) {\r\n        offset--\r\n      }\r\n    }\r\n\r\n    if (!textNode) {\r\n      return null\r\n      // throw new Error(\r\n      //   `Cannot resolve a Slate point from DOM point: ${domPoint}`\r\n      // )\r\n    }\r\n\r\n    // COMPAT: If someone is clicking from one Slate editor into another,\r\n    // the select event fires twice, once for the old editor's `element`\r\n    // first, and then afterwards for the correct `element`. (2017/03/03)\r\n    const slateNode = ReactEditor.toSlateNode(editor, textNode!)\r\n    if (!slateNode) {\r\n      return null\r\n    }\r\n    const path = ReactEditor.findPath(editor, slateNode)\r\n    return { path, offset }\r\n  },\r\n\r\n  /**\r\n   * Find a Slate range from a DOM range or selection.\r\n   */\r\n\r\n  toSlateRange(\r\n    editor: ReactEditor,\r\n    domRange: DOMRange | DOMStaticRange | DOMSelection\r\n  ): Range | null {\r\n    const el =\r\n      domRange instanceof Selection\r\n        ? domRange.anchorNode\r\n        : domRange.startContainer\r\n    let anchorNode\r\n    let anchorOffset\r\n    let focusNode\r\n    let focusOffset\r\n    let isCollapsed\r\n\r\n    if (el) {\r\n      if (domRange instanceof Selection) {\r\n        anchorNode = domRange.anchorNode\r\n        anchorOffset = domRange.anchorOffset\r\n        focusNode = domRange.focusNode\r\n        focusOffset = domRange.focusOffset\r\n        isCollapsed = domRange.isCollapsed\r\n      } else {\r\n        anchorNode = domRange.startContainer\r\n        anchorOffset = domRange.startOffset\r\n        focusNode = domRange.endContainer\r\n        focusOffset = domRange.endOffset\r\n        isCollapsed = domRange.collapsed\r\n      }\r\n    }\r\n\r\n    if (\r\n      anchorNode == null ||\r\n      focusNode == null ||\r\n      anchorOffset == null ||\r\n      focusOffset == null\r\n    ) {\r\n      return null\r\n      // throw new Error(\r\n      //   `Cannot resolve a Slate range from DOM range: ${domRange}`\r\n      // )\r\n    }\r\n\r\n    const anchor = ReactEditor.toSlatePoint(editor, [anchorNode, anchorOffset])\r\n    if (!anchor) {\r\n      return null\r\n    }\r\n    const focus = isCollapsed\r\n      ? anchor\r\n      : ReactEditor.toSlatePoint(editor, [focusNode, focusOffset])\r\n    if (!focus) {\r\n      return null\r\n    }\r\n    return { anchor, focus }\r\n  },\r\n}\r\n","import { createContext, useContext } from 'react'\r\n\r\n/**\r\n * A React context for sharing the `focused` state of the editor.\r\n */\r\n\r\nexport const FocusedContext = createContext(false)\r\n\r\n/**\r\n * Get the current `focused` state of the editor.\r\n */\r\n\r\nexport const useFocused = (): boolean => {\r\n  return useContext(FocusedContext)\r\n}\r\n","import { createContext, useContext } from 'react'\r\n\r\nimport { ReactEditor } from '../plugin/react-editor'\r\n\r\n/**\r\n * A React context for sharing the editor object.\r\n */\r\n\r\nexport const EditorContext = createContext<ReactEditor | null>(null)\r\n\r\n/**\r\n * Get the current editor object from the React context.\r\n */\r\n\r\nexport const useEditor = () => {\r\n  const editor = useContext(EditorContext)\r\n\r\n  if (!editor) {\r\n    throw new Error(\r\n      `The \\`useEditor\\` hook must be used inside the <Slate> component's context.`\r\n    )\r\n  }\r\n\r\n  return editor\r\n}\r\n","import { createContext, useContext } from 'react'\r\n\r\nimport { ReactEditor } from '../plugin/react-editor'\r\n\r\n/**\r\n * A React context for sharing the editor object, in a way that re-renders the\r\n * context whenever changes occur.\r\n */\r\n\r\nexport const SlateContext = createContext<[ReactEditor] | null>(null)\r\n\r\n/**\r\n * Get the current editor object from the React context.\r\n */\r\n\r\nexport const useSlate = () => {\r\n  const context = useContext(SlateContext)\r\n\r\n  if (!context) {\r\n    throw new Error(\r\n      `The \\`useSlate\\` hook must be used inside the <SlateProvider> component's context.`\r\n    )\r\n  }\r\n\r\n  const [editor] = context\r\n  return editor\r\n}\r\n","import React, { useMemo, useState, useCallback } from 'react'\r\nimport { Node } from 'slate'\r\n\r\nimport { ReactEditor } from '../plugin/react-editor'\r\nimport { FocusedContext } from '../hooks/use-focused'\r\nimport { EditorContext } from '../hooks/use-editor'\r\nimport { SlateContext } from '../hooks/use-slate'\r\nimport { EDITOR_TO_ON_CHANGE } from '../utils/weak-maps'\r\n\r\n/**\r\n * A wrapper around the provider to handle `onChange` events, because the editor\r\n * is a mutable singleton so it won't ever register as \"changed\" otherwise.\r\n */\r\n\r\nexport const Slate = (props: {\r\n  editor: ReactEditor\r\n  value: Node[]\r\n  children: React.ReactNode\r\n  onChange: (value: Node[]) => void\r\n  [key: string]: any\r\n}) => {\r\n  const { editor, children, onChange, value, ...rest } = props\r\n  const [key, setKey] = useState(0)\r\n  const context: [ReactEditor] = useMemo(() => {\r\n    editor.children = value\r\n    Object.assign(editor, rest)\r\n    return [editor]\r\n  }, [key, value, ...Object.values(rest)])\r\n\r\n  const onContextChange = useCallback(() => {\r\n    onChange(editor.children)\r\n    setKey(key + 1)\r\n  }, [key, onChange])\r\n\r\n  EDITOR_TO_ON_CHANGE.set(editor, onContextChange)\r\n\r\n  return (\r\n    <SlateContext.Provider value={context}>\r\n      <EditorContext.Provider value={editor}>\r\n        <FocusedContext.Provider value={ReactEditor.isFocused(editor)}>\r\n          {children}\r\n        </FocusedContext.Provider>\r\n      </EditorContext.Provider>\r\n    </SlateContext.Provider>\r\n  )\r\n}\r\n","import { createContext, useContext } from 'react'\r\n\r\n/**\r\n * A React context for sharing the `readOnly` state of the editor.\r\n */\r\n\r\nexport const ReadOnlyContext = createContext(false)\r\n\r\n/**\r\n * Get the current `readOnly` state of the editor.\r\n */\r\n\r\nexport const useReadOnly = (): boolean => {\r\n  return useContext(ReadOnlyContext)\r\n}\r\n","import { createContext, useContext } from 'react'\r\n\r\n/**\r\n * A React context for sharing the `selected` state of an element.\r\n */\r\n\r\nexport const SelectedContext = createContext(false)\r\n\r\n/**\r\n * Get the current `selected` state of an element.\r\n */\r\n\r\nexport const useSelected = (): boolean => {\r\n  return useContext(SelectedContext)\r\n}\r\n","import ReactDOM from 'react-dom'\r\nimport { Editor, Node, Path, Operation, Transforms, Range } from 'slate'\r\n\r\nimport { ReactEditor } from './react-editor'\r\nimport { Key } from '../utils/key'\r\nimport { EDITOR_TO_ON_CHANGE, NODE_TO_KEY } from '../utils/weak-maps'\r\nimport { isDOMText, getPlainText } from '../utils/dom'\r\n\r\n/**\r\n * `withReact` adds React and DOM specific behaviors to the editor.\r\n */\r\n\r\nexport const withReact = <T extends Editor>(editor: T) => {\r\n  const e = editor as T & ReactEditor\r\n  const { apply, onChange } = e\r\n\r\n  e.apply = (op: Operation) => {\r\n    const matches: [Path, Key][] = []\r\n\r\n    switch (op.type) {\r\n      case 'insert_text':\r\n      case 'remove_text':\r\n      case 'set_node': {\r\n        for (const [node, path] of Editor.levels(e, { at: op.path })) {\r\n          const key = ReactEditor.findKey(e, node)\r\n          matches.push([path, key])\r\n        }\r\n\r\n        break\r\n      }\r\n\r\n      case 'insert_node':\r\n      case 'remove_node':\r\n      case 'merge_node':\r\n      case 'split_node': {\r\n        for (const [node, path] of Editor.levels(e, {\r\n          at: Path.parent(op.path),\r\n        })) {\r\n          const key = ReactEditor.findKey(e, node)\r\n          matches.push([path, key])\r\n        }\r\n\r\n        break\r\n      }\r\n\r\n      case 'move_node': {\r\n        // TODO\r\n        break\r\n      }\r\n    }\r\n\r\n    apply(op)\r\n\r\n    for (const [path, key] of matches) {\r\n      const [node] = Editor.node(e, path)\r\n      NODE_TO_KEY.set(node, key)\r\n    }\r\n  }\r\n\r\n  e.setFragmentData = (data: DataTransfer) => {\r\n    const { selection } = e\r\n\r\n    if (!selection) {\r\n      return\r\n    }\r\n\r\n    const [start, end] = Range.edges(selection)\r\n    const startVoid = Editor.void(e, { at: start.path })\r\n    const endVoid = Editor.void(e, { at: end.path })\r\n\r\n    if (Range.isCollapsed(selection) && !startVoid) {\r\n      return\r\n    }\r\n\r\n    // Create a fake selection so that we can add a Base64-encoded copy of the\r\n    // fragment to the HTML, to decode on future pastes.\r\n    const domRange = ReactEditor.toDOMRange(e, selection)\r\n    if (!domRange) {\r\n      return\r\n    }\r\n    let contents = domRange.cloneContents()\r\n    let attach = contents.childNodes[0] as HTMLElement\r\n\r\n    // Make sure attach is non-empty, since empty nodes will not get copied.\r\n    contents.childNodes.forEach(node => {\r\n      if (node.textContent && node.textContent.trim() !== '') {\r\n        attach = node as HTMLElement\r\n      }\r\n    })\r\n\r\n    // COMPAT: If the end node is a void node, we need to move the end of the\r\n    // range from the void node's spacer span, to the end of the void node's\r\n    // content, since the spacer is before void's content in the DOM.\r\n    if (endVoid) {\r\n      const [voidNode] = endVoid\r\n      const r = domRange.cloneRange()\r\n      const domNode = ReactEditor.toDOMNode(e, voidNode)\r\n      if (!domNode) {\r\n        return\r\n      }\r\n      r.setEndAfter(domNode)\r\n      contents = r.cloneContents()\r\n    }\r\n\r\n    // COMPAT: If the start node is a void node, we need to attach the encoded\r\n    // fragment to the void node's content node instead of the spacer, because\r\n    // attaching it to empty `<div>/<span>` nodes will end up having it erased by\r\n    // most browsers. (2018/04/27)\r\n    if (startVoid) {\r\n      attach = contents.querySelector('[data-slate-spacer]')! as HTMLElement\r\n    }\r\n\r\n    // Remove any zero-width space spans from the cloned DOM so that they don't\r\n    // show up elsewhere when pasted.\r\n    Array.from(contents.querySelectorAll('[data-slate-zero-width]')).forEach(\r\n      zw => {\r\n        const isNewline = zw.getAttribute('data-slate-zero-width') === 'n'\r\n        zw.textContent = isNewline ? '\\n' : ''\r\n      }\r\n    )\r\n\r\n    // Set a `data-slate-fragment` attribute on a non-empty node, so it shows up\r\n    // in the HTML, and can be used for intra-Slate pasting. If it's a text\r\n    // node, wrap it in a `<span>` so we have something to set an attribute on.\r\n    if (isDOMText(attach)) {\r\n      const span = document.createElement('span')\r\n      // COMPAT: In Chrome and Safari, if we don't add the `white-space` style\r\n      // then leading and trailing spaces will be ignored. (2017/09/21)\r\n      span.style.whiteSpace = 'pre'\r\n      span.appendChild(attach)\r\n      contents.appendChild(span)\r\n      attach = span\r\n    }\r\n\r\n    const fragment = e.getFragment()\r\n    const string = JSON.stringify(fragment)\r\n    const encoded = window.btoa(encodeURIComponent(string))\r\n    attach.setAttribute('data-slate-fragment', encoded)\r\n    data.setData('application/x-slate-fragment', encoded)\r\n\r\n    // Add the content to a <div> so that we can get its inner HTML.\r\n    const div = document.createElement('div')\r\n    div.appendChild(contents)\r\n    div.setAttribute('hidden', 'true')\r\n    document.body.appendChild(div)\r\n    data.setData('text/html', div.innerHTML)\r\n    data.setData('text/plain', getPlainText(div))\r\n    document.body.removeChild(div)\r\n  }\r\n\r\n  e.insertData = (data: DataTransfer) => {\r\n    const fragment = data.getData('application/x-slate-fragment')\r\n\r\n    if (fragment) {\r\n      const decoded = decodeURIComponent(window.atob(fragment))\r\n      const parsed = JSON.parse(decoded) as Node[]\r\n      Transforms.insertFragment(e, parsed)\r\n      return\r\n    }\r\n\r\n    const text = data.getData('text/plain')\r\n\r\n    if (text) {\r\n      const lines = text.split(/\\r\\n|\\r|\\n/)\r\n      let split = false\r\n\r\n      for (const line of lines) {\r\n        if (split) {\r\n          Transforms.splitNodes(e, { always: true })\r\n        }\r\n\r\n        Transforms.insertText(e, line)\r\n        split = true\r\n      }\r\n    }\r\n  }\r\n\r\n  e.onChange = () => {\r\n    // COMPAT: React doesn't batch `setState` hook calls, which means that the\r\n    // children and selection can get out of sync for one render pass. So we\r\n    // have to use this unstable API to ensure it batches them. (2019/12/03)\r\n    // https://github.com/facebook/react/issues/14259#issuecomment-439702367\r\n    ReactDOM.unstable_batchedUpdates(() => {\r\n      const onContextChange = EDITOR_TO_ON_CHANGE.get(e)\r\n\r\n      if (onContextChange) {\r\n        onContextChange()\r\n      }\r\n\r\n      onChange()\r\n    })\r\n  }\r\n\r\n  return e\r\n}\r\n","import React from 'react'\r\nimport { Editor, Text, Path, Element, Node } from 'slate'\r\n\r\nimport { ReactEditor, useEditor } from '..'\r\n\r\n/**\r\n * Leaf content strings.\r\n */\r\n\r\nconst String = (props: {\r\n  isLast: boolean\r\n  leaf: Text\r\n  parent: Element\r\n  text: Text\r\n}) => {\r\n  const { isLast, leaf, parent, text } = props\r\n  const editor = useEditor()\r\n  const path = ReactEditor.findPath(editor, text)\r\n  const parentPath = Path.parent(path)\r\n\r\n  // COMPAT: Render text inside void nodes with a zero-width space.\r\n  // So the node can contain selection but the text is not visible.\r\n  if (editor.isVoid(parent)) {\r\n    return <ZeroWidthString length={Node.string(parent).length} />\r\n  }\r\n\r\n  // COMPAT: If this is the last text node in an empty block, render a zero-\r\n  // width space that will convert into a line break when copying and pasting\r\n  // to support expected plain text.\r\n  if (\r\n    leaf.text === '' &&\r\n    parent.children[parent.children.length - 1] === text &&\r\n    !editor.isInline(parent) &&\r\n    Editor.string(editor, parentPath) === ''\r\n  ) {\r\n    return <ZeroWidthString isLineBreak />\r\n  }\r\n\r\n  // COMPAT: If the text is empty, it's because it's on the edge of an inline\r\n  // node, so we render a zero-width space so that the selection can be\r\n  // inserted next to it still.\r\n  if (leaf.text === '') {\r\n    return <ZeroWidthString />\r\n  }\r\n\r\n  // COMPAT: Browsers will collapse trailing new lines at the end of blocks,\r\n  // so we need to add an extra trailing new lines to prevent that.\r\n  if (isLast && leaf.text.slice(-1) === '\\n') {\r\n    return <TextString isTrailing text={leaf.text} />\r\n  }\r\n\r\n  return <TextString text={leaf.text} />\r\n}\r\n\r\n/**\r\n * Leaf strings with text in them.\r\n */\r\n\r\nconst TextString = (props: { text: string; isTrailing?: boolean }) => {\r\n  const { text, isTrailing = false } = props\r\n  return (\r\n    <span data-slate-string>\r\n      {text}\r\n      {isTrailing ? '\\n' : null}\r\n    </span>\r\n  )\r\n}\r\n\r\n/**\r\n * Leaf strings without text, render as zero-width strings.\r\n */\r\n\r\nconst ZeroWidthString = (props: { length?: number; isLineBreak?: boolean }) => {\r\n  const { length = 0, isLineBreak = false } = props\r\n  return (\r\n    <span\r\n      data-slate-zero-width={isLineBreak ? 'n' : 'z'}\r\n      data-slate-length={length}\r\n    >\r\n      {'\\uFEFF'}\r\n      {isLineBreak ? <br /> : null}\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default String\r\n","import React from 'react'\r\nimport { Text, Element } from 'slate'\r\n\r\nimport String from './string'\r\nimport { PLACEHOLDER_SYMBOL } from '../utils/weak-maps'\r\nimport { RenderLeafProps } from './editable'\r\n\r\n/**\r\n * Individual leaves in a text node with unique formatting.\r\n */\r\n\r\nconst Leaf = (props: {\r\n  isLast: boolean\r\n  leaf: Text\r\n  parent: Element\r\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\r\n  text: Text\r\n}) => {\r\n  const {\r\n    leaf,\r\n    isLast,\r\n    text,\r\n    parent,\r\n    renderLeaf = (props: RenderLeafProps) => <DefaultLeaf {...props} />,\r\n  } = props\r\n\r\n  let children = (\r\n    <String isLast={isLast} leaf={leaf} parent={parent} text={text} />\r\n  )\r\n\r\n  if (leaf[PLACEHOLDER_SYMBOL]) {\r\n    children = (\r\n      <React.Fragment>\r\n        <span\r\n          contentEditable={false}\r\n          style={{\r\n            pointerEvents: 'none',\r\n            display: 'inline-block',\r\n            verticalAlign: 'text-top',\r\n            width: '0',\r\n            maxWidth: '100%',\r\n            whiteSpace: 'nowrap',\r\n            opacity: '0.333',\r\n            userSelect: 'none',\r\n          }}\r\n        >\r\n          {leaf.placeholder}\r\n        </span>\r\n        {children}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  // COMPAT: Having the `data-` attributes on these leaf elements ensures that\r\n  // in certain misbehaving browsers they aren't weirdly cloned/destroyed by\r\n  // contenteditable behaviors. (2019/05/08)\r\n  const attributes: {\r\n    'data-slate-leaf': true\r\n  } = {\r\n    'data-slate-leaf': true,\r\n  }\r\n\r\n  return renderLeaf({ attributes, children, leaf, text })\r\n}\r\n\r\nconst MemoizedLeaf = React.memo(Leaf, (prev, next) => {\r\n  return (\r\n    next.parent === prev.parent &&\r\n    next.isLast === prev.isLast &&\r\n    next.renderLeaf === prev.renderLeaf &&\r\n    next.text === prev.text &&\r\n    Text.matches(next.leaf, prev.leaf)\r\n  )\r\n})\r\n\r\n/**\r\n * The default custom leaf renderer.\r\n */\r\n\r\nexport const DefaultLeaf = (props: RenderLeafProps) => {\r\n  const { attributes, children } = props\r\n  return <span {...attributes}>{children}</span>\r\n}\r\n\r\nexport default MemoizedLeaf\r\n","import { useLayoutEffect, useEffect } from 'react'\r\n\r\n/**\r\n * Prevent warning on SSR by falling back to useEffect when window is not defined\r\n */\r\nexport const useIsomorphicLayoutEffect =\r\n  typeof window !== 'undefined' ? useLayoutEffect : useEffect\r\n","import React, { useRef } from 'react'\r\nimport { Range, Element, Text as SlateText } from 'slate'\r\n\r\nimport Leaf from './leaf'\r\nimport { ReactEditor, useEditor } from '..'\r\nimport { RenderLeafProps } from './editable'\r\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\r\nimport {\r\n  KEY_TO_ELEMENT,\r\n  NODE_TO_ELEMENT,\r\n  ELEMENT_TO_NODE,\r\n} from '../utils/weak-maps'\r\n\r\n/**\r\n * Text.\r\n */\r\n\r\nconst Text = (props: {\r\n  decorations: Range[]\r\n  isLast: boolean\r\n  parent: Element\r\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\r\n  text: SlateText\r\n}) => {\r\n  const { decorations, isLast, parent, renderLeaf, text } = props\r\n  const editor = useEditor()\r\n  const ref = useRef<HTMLSpanElement>(null)\r\n  const leaves = SlateText.decorations(text, decorations)\r\n  const key = ReactEditor.findKey(editor, text)\r\n  const children = []\r\n\r\n  for (let i = 0; i < leaves.length; i++) {\r\n    const leaf = leaves[i]\r\n\r\n    children.push(\r\n      <Leaf\r\n        isLast={isLast && i === leaves.length - 1}\r\n        key={`${key.id}-${i}`}\r\n        leaf={leaf}\r\n        text={text}\r\n        parent={parent}\r\n        renderLeaf={renderLeaf}\r\n      />\r\n    )\r\n  }\r\n\r\n  // Update element-related weak maps with the DOM element ref.\r\n  useIsomorphicLayoutEffect(() => {\r\n    if (ref.current) {\r\n      KEY_TO_ELEMENT.set(key, ref.current)\r\n      NODE_TO_ELEMENT.set(text, ref.current)\r\n      ELEMENT_TO_NODE.set(ref.current, text)\r\n    } else {\r\n      KEY_TO_ELEMENT.delete(key)\r\n      NODE_TO_ELEMENT.delete(text)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <span data-slate-node=\"text\" ref={ref}>\r\n      {children}\r\n    </span>\r\n  )\r\n}\r\n\r\nconst MemoizedText = React.memo(Text, (prev, next) => {\r\n  return (\r\n    next.parent === prev.parent &&\r\n    next.isLast === prev.isLast &&\r\n    next.renderLeaf === prev.renderLeaf &&\r\n    next.text === prev.text\r\n  )\r\n})\r\n\r\nexport default MemoizedText\r\n","import React, { useRef } from 'react'\r\nimport getDirection from 'direction'\r\nimport { Editor, Node, Range, NodeEntry, Element as SlateElement } from 'slate'\r\n\r\nimport Text from './text'\r\nimport Children from './children'\r\nimport { ReactEditor, useEditor, useReadOnly } from '..'\r\nimport { SelectedContext } from '../hooks/use-selected'\r\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\r\nimport {\r\n  NODE_TO_ELEMENT,\r\n  ELEMENT_TO_NODE,\r\n  NODE_TO_PARENT,\r\n  NODE_TO_INDEX,\r\n  KEY_TO_ELEMENT,\r\n} from '../utils/weak-maps'\r\nimport { RenderElementProps, RenderLeafProps } from './editable'\r\n\r\n/**\r\n * Element.\r\n */\r\n\r\nconst Element = (props: {\r\n  decorate: (entry: NodeEntry) => Range[]\r\n  decorations: Range[]\r\n  element: SlateElement\r\n  renderElement?: (props: RenderElementProps) => JSX.Element\r\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\r\n  selection: Range | null\r\n}) => {\r\n  const {\r\n    decorate,\r\n    decorations,\r\n    element,\r\n    renderElement = (p: RenderElementProps) => <DefaultElement {...p} />,\r\n    renderLeaf,\r\n    selection,\r\n  } = props\r\n  const ref = useRef<HTMLElement>(null)\r\n  const editor = useEditor()\r\n  const readOnly = useReadOnly()\r\n  const isInline = editor.isInline(element)\r\n  const key = ReactEditor.findKey(editor, element)\r\n\r\n  let children: JSX.Element | null = (\r\n    <Children\r\n      decorate={decorate}\r\n      decorations={decorations}\r\n      node={element}\r\n      renderElement={renderElement}\r\n      renderLeaf={renderLeaf}\r\n      selection={selection}\r\n    />\r\n  )\r\n\r\n  // Attributes that the developer must mix into the element in their\r\n  // custom node renderer component.\r\n  const attributes: {\r\n    'data-slate-node': 'element'\r\n    'data-slate-void'?: true\r\n    'data-slate-inline'?: true\r\n    contentEditable?: false\r\n    dir?: 'rtl'\r\n    ref: any\r\n  } = {\r\n    'data-slate-node': 'element',\r\n    ref,\r\n  }\r\n\r\n  if (isInline) {\r\n    attributes['data-slate-inline'] = true\r\n  }\r\n\r\n  // If it's a block node with inline children, add the proper `dir` attribute\r\n  // for text direction.\r\n  if (!isInline && Editor.hasInlines(editor, element)) {\r\n    const text = Node.string(element)\r\n    const dir = getDirection(text)\r\n\r\n    if (dir === 'rtl') {\r\n      attributes.dir = dir\r\n    }\r\n  }\r\n\r\n  // If it's a void node, wrap the children in extra void-specific elements.\r\n  if (Editor.isVoid(editor, element)) {\r\n    attributes['data-slate-void'] = true\r\n\r\n    if (!readOnly && isInline) {\r\n      attributes.contentEditable = false\r\n    }\r\n\r\n    const Tag = isInline ? 'span' : 'div'\r\n    const [[text]] = Node.texts(element)\r\n\r\n    children = readOnly ? null : (\r\n      <Tag\r\n        data-slate-spacer\r\n        style={{\r\n          height: '0',\r\n          color: 'transparent',\r\n          outline: 'none',\r\n          position: 'absolute',\r\n        }}\r\n      >\r\n        <Text decorations={[]} isLast={false} parent={element} text={text} />\r\n      </Tag>\r\n    )\r\n\r\n    NODE_TO_INDEX.set(text, 0)\r\n    NODE_TO_PARENT.set(text, element)\r\n  }\r\n\r\n  // Update element-related weak maps with the DOM element ref.\r\n  useIsomorphicLayoutEffect(() => {\r\n    if (ref.current) {\r\n      KEY_TO_ELEMENT.set(key, ref.current)\r\n      NODE_TO_ELEMENT.set(element, ref.current)\r\n      ELEMENT_TO_NODE.set(ref.current, element)\r\n    } else {\r\n      KEY_TO_ELEMENT.delete(key)\r\n      NODE_TO_ELEMENT.delete(element)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <SelectedContext.Provider value={!!selection}>\r\n      {renderElement({ attributes, children, element })}\r\n    </SelectedContext.Provider>\r\n  )\r\n}\r\n\r\nconst MemoizedElement = React.memo(Element, (prev, next) => {\r\n  return (\r\n    prev.decorate === next.decorate &&\r\n    prev.element === next.element &&\r\n    prev.renderElement === next.renderElement &&\r\n    prev.renderLeaf === next.renderLeaf &&\r\n    isRangeListEqual(prev.decorations, next.decorations) &&\r\n    (prev.selection === next.selection ||\r\n      (!!prev.selection &&\r\n        !!next.selection &&\r\n        Range.equals(prev.selection, next.selection)))\r\n  )\r\n})\r\n\r\n/**\r\n * The default element renderer.\r\n */\r\n\r\nexport const DefaultElement = (props: RenderElementProps) => {\r\n  const { attributes, children, element } = props\r\n  const editor = useEditor()\r\n  const Tag = editor.isInline(element) ? 'span' : 'div'\r\n  return (\r\n    <Tag {...attributes} style={{ position: 'relative' }}>\r\n      {children}\r\n    </Tag>\r\n  )\r\n}\r\n\r\n/**\r\n * Check if a list of ranges is equal to another.\r\n *\r\n * PERF: this requires the two lists to also have the ranges inside them in the\r\n * same order, but this is an okay constraint for us since decorations are\r\n * kept in order, and the odd case where they aren't is okay to re-render for.\r\n */\r\n\r\nconst isRangeListEqual = (list: Range[], another: Range[]): boolean => {\r\n  if (list.length !== another.length) {\r\n    return false\r\n  }\r\n\r\n  for (let i = 0; i < list.length; i++) {\r\n    const range = list[i]\r\n    const other = another[i]\r\n\r\n    if (!Range.equals(range, other)) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  return true\r\n}\r\n\r\nexport default MemoizedElement\r\n","import React from 'react'\r\nimport { Editor, Range, Element, NodeEntry, Ancestor, Descendant } from 'slate'\r\n\r\nimport ElementComponent from './element'\r\nimport TextComponent from './text'\r\nimport { ReactEditor } from '..'\r\nimport { useEditor } from '../hooks/use-editor'\r\nimport { NODE_TO_INDEX, NODE_TO_PARENT } from '../utils/weak-maps'\r\nimport { RenderElementProps, RenderLeafProps } from './editable'\r\n\r\n/**\r\n * Children.\r\n */\r\n\r\nconst Children = (props: {\r\n  decorate: (entry: NodeEntry) => Range[]\r\n  decorations: Range[]\r\n  node: Ancestor\r\n  renderElement?: (props: RenderElementProps) => JSX.Element\r\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\r\n  selection: Range | null\r\n}) => {\r\n  const {\r\n    decorate,\r\n    decorations,\r\n    node,\r\n    renderElement,\r\n    renderLeaf,\r\n    selection,\r\n  } = props\r\n  const editor = useEditor()\r\n  const path = ReactEditor.findPath(editor, node)\r\n  const children = []\r\n  const isLeafBlock =\r\n    Element.isElement(node) &&\r\n    !editor.isInline(node) &&\r\n    Editor.hasInlines(editor, node)\r\n\r\n  for (let i = 0; i < node.children.length; i++) {\r\n    const p = path.concat(i)\r\n    const n = node.children[i] as Descendant\r\n    const key = ReactEditor.findKey(editor, n)\r\n    const range = Editor.range(editor, p)\r\n    const sel = selection && Range.intersection(range, selection)\r\n    const ds = decorate([n, p])\r\n\r\n    for (const dec of decorations) {\r\n      const d = Range.intersection(dec, range)\r\n\r\n      if (d) {\r\n        ds.push(d)\r\n      }\r\n    }\r\n\r\n    if (Element.isElement(n)) {\r\n      children.push(\r\n        <ElementComponent\r\n          decorate={decorate}\r\n          decorations={ds}\r\n          element={n}\r\n          key={key.id}\r\n          renderElement={renderElement}\r\n          renderLeaf={renderLeaf}\r\n          selection={sel}\r\n        />\r\n      )\r\n    } else {\r\n      children.push(\r\n        <TextComponent\r\n          decorations={ds}\r\n          key={key.id}\r\n          isLast={isLeafBlock && i === node.children.length - 1}\r\n          parent={node}\r\n          renderLeaf={renderLeaf}\r\n          text={n}\r\n        />\r\n      )\r\n    }\r\n\r\n    NODE_TO_INDEX.set(n, i)\r\n    NODE_TO_PARENT.set(n, node)\r\n  }\r\n\r\n  return <React.Fragment>{children}</React.Fragment>\r\n}\r\n\r\nexport default Children\r\n","export const IS_IOS =\r\n  typeof navigator !== 'undefined' &&\r\n  typeof window !== 'undefined' &&\r\n  /iPad|iPhone|iPod/.test(navigator.userAgent) &&\r\n  !window.MSStream\r\n\r\nexport const IS_APPLE =\r\n  typeof navigator !== 'undefined' && /Mac OS X/.test(navigator.userAgent)\r\n\r\nexport const IS_FIREFOX =\r\n  typeof navigator !== 'undefined' &&\r\n  /^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent)\r\n\r\nexport const IS_SAFARI =\r\n  typeof navigator !== 'undefined' &&\r\n  /Version\\/[\\d\\.]+.*Safari/.test(navigator.userAgent)\r\n\r\n// \"modern\" Edge was released at 79.x\r\nexport const IS_EDGE_LEGACY =\r\n  typeof navigator !== 'undefined' &&\r\n  /Edge?\\/(?:[0-6][0-9]|[0-7][0-8])/i.test(navigator.userAgent)\r\n","import { isKeyHotkey } from 'is-hotkey'\r\nimport { IS_APPLE } from './environment'\r\n\r\n/**\r\n * Hotkey mappings for each platform.\r\n */\r\n\r\nconst HOTKEYS = {\r\n  bold: 'mod+b',\r\n  compose: ['down', 'left', 'right', 'up', 'backspace', 'enter'],\r\n  moveBackward: 'left',\r\n  moveForward: 'right',\r\n  moveWordBackward: 'ctrl+left',\r\n  moveWordForward: 'ctrl+right',\r\n  deleteBackward: 'shift?+backspace',\r\n  deleteForward: 'shift?+delete',\r\n  extendBackward: 'shift+left',\r\n  extendForward: 'shift+right',\r\n  italic: 'mod+i',\r\n  splitBlock: 'shift?+enter',\r\n  undo: 'mod+z',\r\n}\r\n\r\nconst APPLE_HOTKEYS = {\r\n  moveLineBackward: 'opt+up',\r\n  moveLineForward: 'opt+down',\r\n  moveWordBackward: 'opt+left',\r\n  moveWordForward: 'opt+right',\r\n  deleteBackward: ['ctrl+backspace', 'ctrl+h'],\r\n  deleteForward: ['ctrl+delete', 'ctrl+d'],\r\n  deleteLineBackward: 'cmd+shift?+backspace',\r\n  deleteLineForward: ['cmd+shift?+delete', 'ctrl+k'],\r\n  deleteWordBackward: 'opt+shift?+backspace',\r\n  deleteWordForward: 'opt+shift?+delete',\r\n  extendLineBackward: 'opt+shift+up',\r\n  extendLineForward: 'opt+shift+down',\r\n  redo: 'cmd+shift+z',\r\n  transposeCharacter: 'ctrl+t',\r\n}\r\n\r\nconst WINDOWS_HOTKEYS = {\r\n  deleteWordBackward: 'ctrl+shift?+backspace',\r\n  deleteWordForward: 'ctrl+shift?+delete',\r\n  redo: ['ctrl+y', 'ctrl+shift+z'],\r\n}\r\n\r\n/**\r\n * Create a platform-aware hotkey checker.\r\n */\r\n\r\nconst create = (key: string) => {\r\n  const generic = HOTKEYS[key]\r\n  const apple = APPLE_HOTKEYS[key]\r\n  const windows = WINDOWS_HOTKEYS[key]\r\n  const isGeneric = generic && isKeyHotkey(generic)\r\n  const isApple = apple && isKeyHotkey(apple)\r\n  const isWindows = windows && isKeyHotkey(windows)\r\n\r\n  return (event: KeyboardEvent) => {\r\n    if (isGeneric && isGeneric(event)) return true\r\n    if (IS_APPLE && isApple && isApple(event)) return true\r\n    if (!IS_APPLE && isWindows && isWindows(event)) return true\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * Hotkeys.\r\n */\r\n\r\nexport default {\r\n  isBold: create('bold'),\r\n  isCompose: create('compose'),\r\n  isMoveBackward: create('moveBackward'),\r\n  isMoveForward: create('moveForward'),\r\n  isDeleteBackward: create('deleteBackward'),\r\n  isDeleteForward: create('deleteForward'),\r\n  isDeleteLineBackward: create('deleteLineBackward'),\r\n  isDeleteLineForward: create('deleteLineForward'),\r\n  isDeleteWordBackward: create('deleteWordBackward'),\r\n  isDeleteWordForward: create('deleteWordForward'),\r\n  isExtendBackward: create('extendBackward'),\r\n  isExtendForward: create('extendForward'),\r\n  isExtendLineBackward: create('extendLineBackward'),\r\n  isExtendLineForward: create('extendLineForward'),\r\n  isItalic: create('italic'),\r\n  isMoveLineBackward: create('moveLineBackward'),\r\n  isMoveLineForward: create('moveLineForward'),\r\n  isMoveWordBackward: create('moveWordBackward'),\r\n  isMoveWordForward: create('moveWordForward'),\r\n  isRedo: create('redo'),\r\n  isSplitBlock: create('splitBlock'),\r\n  isTransposeCharacter: create('transposeCharacter'),\r\n  isUndo: create('undo'),\r\n}\r\n","import React, { useEffect, useRef, useMemo, useCallback } from 'react'\r\nimport {\r\n  Editor,\r\n  Element,\r\n  NodeEntry,\r\n  Node,\r\n  Range,\r\n  Text,\r\n  Transforms,\r\n  Path,\r\n} from 'slate'\r\nimport throttle from 'lodash/throttle'\r\n\r\nimport Children from './children'\r\nimport Hotkeys from '../utils/hotkeys'\r\nimport { IS_FIREFOX, IS_SAFARI, IS_EDGE_LEGACY } from '../utils/environment'\r\nimport { ReactEditor } from '..'\r\nimport { ReadOnlyContext } from '../hooks/use-read-only'\r\nimport { useSlate } from '../hooks/use-slate'\r\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\r\nimport {\r\n  DOMElement,\r\n  DOMNode,\r\n  DOMRange,\r\n  isDOMElement,\r\n  isDOMNode,\r\n  isDOMText,\r\n  DOMStaticRange,\r\n  isPlainTextOnlyPaste,\r\n} from '../utils/dom'\r\nimport {\r\n  EDITOR_TO_ELEMENT,\r\n  ELEMENT_TO_NODE,\r\n  IS_READ_ONLY,\r\n  NODE_TO_ELEMENT,\r\n  IS_FOCUSED,\r\n  PLACEHOLDER_SYMBOL,\r\n} from '../utils/weak-maps'\r\n\r\n// COMPAT: Firefox/Edge Legacy don't support the `beforeinput` event\r\nconst HAS_BEFORE_INPUT_SUPPORT = !(IS_FIREFOX || IS_EDGE_LEGACY)\r\n\r\n/**\r\n * `RenderElementProps` are passed to the `renderElement` handler.\r\n */\r\n\r\nexport interface RenderElementProps {\r\n  children: any\r\n  element: Element\r\n  attributes: {\r\n    'data-slate-node': 'element'\r\n    'data-slate-inline'?: true\r\n    'data-slate-void'?: true\r\n    dir?: 'rtl'\r\n    ref: any\r\n  }\r\n  showimageditingmodal?: any\r\n  setUploadOrSelectMediaModalVisible?: any\r\n  mediaUploadCount?: any\r\n  googleMapsKey?: any\r\n  useGoogleJavascriptMaps?: any\r\n  useGoogleGeocodingMaps?: any\r\n  useGoogleEmbedMaps?: any\r\n  setSelectedKeys?: any\r\n  availableForms?: any\r\n  weducData?: any\r\n  smartfeedData?: any\r\n  fonts?: any\r\n  siteRecord?: any\r\n}\r\n\r\n/**\r\n * `RenderLeafProps` are passed to the `renderLeaf` handler.\r\n */\r\n\r\nexport interface RenderLeafProps {\r\n  children: any\r\n  leaf: Text\r\n  text: Text\r\n  attributes: {\r\n    'data-slate-leaf': true\r\n  }\r\n  showimageditingmodal?: any\r\n  setUploadOrSelectMediaModalVisible?: any\r\n  mediaUploadCount?: any\r\n  googleMapsKey?: any\r\n  useGoogleJavascriptMaps?: any\r\n  useGoogleGeocodingMaps?: any\r\n  useGoogleEmbedMaps?: any\r\n  setSelectedKeys?: any\r\n  availableForms?: any\r\n  weducData?: any\r\n  smartfeedData?: any\r\n  fonts?: any\r\n  siteRecord?: any\r\n}\r\n\r\n/**\r\n * `EditableProps` are passed to the `<Editable>` component.\r\n */\r\n\r\nexport type EditableProps = {\r\n  decorate?: (entry: NodeEntry) => Range[]\r\n  onDOMBeforeInput?: (event: Event) => void\r\n  placeholder?: string\r\n  readOnly?: boolean\r\n  role?: string\r\n  style?: React.CSSProperties\r\n  renderElement?: (props: RenderElementProps) => JSX.Element\r\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\r\n  as?: React.ElementType\r\n} & React.TextareaHTMLAttributes<HTMLDivElement>\r\n\r\n/**\r\n * Editable.\r\n */\r\n\r\nexport const Editable = (props: EditableProps) => {\r\n  const {\r\n    autoFocus,\r\n    decorate = defaultDecorate,\r\n    onDOMBeforeInput: propsOnDOMBeforeInput,\r\n    placeholder,\r\n    readOnly = false,\r\n    renderElement,\r\n    renderLeaf,\r\n    style = {},\r\n    as: Component = 'div',\r\n    ...attributes\r\n  } = props\r\n  const editor = useSlate()\r\n  const ref = useRef<HTMLDivElement>(null)\r\n\r\n  // Update internal state on each render.\r\n  IS_READ_ONLY.set(editor, readOnly)\r\n\r\n  // Keep track of some state for the event handler logic.\r\n  const state = useMemo(\r\n    () => ({\r\n      isComposing: false,\r\n      isUpdatingSelection: false,\r\n      latestElement: null as DOMElement | null,\r\n    }),\r\n    []\r\n  )\r\n\r\n  // Update element-related weak maps with the DOM element ref.\r\n  useIsomorphicLayoutEffect(() => {\r\n    if (ref.current) {\r\n      EDITOR_TO_ELEMENT.set(editor, ref.current)\r\n      NODE_TO_ELEMENT.set(editor, ref.current)\r\n      ELEMENT_TO_NODE.set(ref.current, editor)\r\n    } else {\r\n      NODE_TO_ELEMENT.delete(editor)\r\n    }\r\n  })\r\n\r\n  // Whenever the editor updates, make sure the DOM selection state is in sync.\r\n  useIsomorphicLayoutEffect(() => {\r\n    const { selection } = editor\r\n    const domSelection = window.getSelection()\r\n\r\n    if (state.isComposing || !domSelection || !ReactEditor.isFocused(editor)) {\r\n      return\r\n    }\r\n\r\n    const hasDomSelection = domSelection.type !== 'None'\r\n\r\n    // If the DOM selection is properly unset, we're done.\r\n    if (!selection && !hasDomSelection) {\r\n      return\r\n    }\r\n\r\n    const newDomRange = selection && ReactEditor.toDOMRange(editor, selection)\r\n\r\n    if (!newDomRange) {\r\n      return\r\n    }\r\n\r\n    // If the DOM selection is already correct, we're done.\r\n    if (\r\n      hasDomSelection &&\r\n      newDomRange &&\r\n      isRangeEqual(domSelection.getRangeAt(0), newDomRange)\r\n    ) {\r\n      return\r\n    }\r\n\r\n    // Otherwise the DOM selection is out of sync, so update it.\r\n    const el = ReactEditor.toDOMNode(editor, editor)\r\n    if (!el) {\r\n      return\r\n    }\r\n    state.isUpdatingSelection = true\r\n    domSelection.removeAllRanges()\r\n\r\n    if (newDomRange) {\r\n      domSelection.addRange(newDomRange!)\r\n\r\n      const leafEl = newDomRange.startContainer.parentElement!\r\n      // MK Fix jumpy scroll\r\n      // scrollIntoView(leafEl, {\r\n      //   scrollMode: 'if-needed',\r\n\r\n      //   // https://github.com/kenchi/slate/commit/1652ecab52088e64ffbaa130fa4049f60cdce57e\r\n      //   boundary: el,\r\n      // })\r\n    }\r\n\r\n    setTimeout(() => {\r\n      // COMPAT: In Firefox, it's not enough to create a range, you also need\r\n      // to focus the contenteditable element too. (2016/11/16)\r\n      if (newDomRange && IS_FIREFOX) {\r\n        el.focus()\r\n      }\r\n\r\n      state.isUpdatingSelection = false\r\n    })\r\n  })\r\n\r\n  // The autoFocus TextareaHTMLAttribute doesn't do anything on a div, so it\r\n  // needs to be manually focused.\r\n  useEffect(() => {\r\n    if (ref.current && autoFocus) {\r\n      ref.current.focus()\r\n    }\r\n  }, [autoFocus])\r\n\r\n  // Listen on the native `beforeinput` event to get real \"Level 2\" events. This\r\n  // is required because React's `beforeinput` is fake and never really attaches\r\n  // to the real event sadly. (2019/11/01)\r\n  // https://github.com/facebook/react/issues/11211\r\n  const onDOMBeforeInput = useCallback(\r\n    (\r\n      event: Event & {\r\n        data: string | null\r\n        dataTransfer: DataTransfer | null\r\n        getTargetRanges(): DOMStaticRange[]\r\n        inputType: string\r\n        isComposing: boolean\r\n      }\r\n    ) => {\r\n      if (\r\n        !readOnly &&\r\n        hasEditableTarget(editor, event.target) &&\r\n        !isDOMEventHandled(event, propsOnDOMBeforeInput)\r\n      ) {\r\n        const { selection } = editor\r\n        const { inputType: type } = event\r\n        const data = event.dataTransfer || event.data || undefined\r\n\r\n        // These two types occur while a user is composing text and can't be\r\n        // cancelled. Let them through and wait for the composition to end.\r\n        if (\r\n          type === 'insertCompositionText' ||\r\n          type === 'deleteCompositionText'\r\n        ) {\r\n          return\r\n        }\r\n\r\n        event.preventDefault()\r\n\r\n        // COMPAT: For the deleting forward/backward input types we don't want\r\n        // to change the selection because it is the range that will be deleted,\r\n        // and those commands determine that for themselves.\r\n        if (!type.startsWith('delete') || type.startsWith('deleteBy')) {\r\n          const [targetRange] = event.getTargetRanges()\r\n\r\n          if (targetRange) {\r\n            const range = ReactEditor.toSlateRange(editor, targetRange)\r\n            if (range) {\r\n              if (!selection || !Range.equals(selection, range)) {\r\n                Transforms.select(editor, range)\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // COMPAT: If the selection is expanded, even if the command seems like\r\n        // a delete forward/backward command it should delete the selection.\r\n        if (\r\n          selection &&\r\n          Range.isExpanded(selection) &&\r\n          type.startsWith('delete')\r\n        ) {\r\n          Editor.deleteFragment(editor)\r\n          return\r\n        }\r\n\r\n        switch (type) {\r\n          case 'deleteByComposition':\r\n          case 'deleteByCut':\r\n          case 'deleteByDrag': {\r\n            Editor.deleteFragment(editor)\r\n            break\r\n          }\r\n\r\n          case 'deleteContent':\r\n          case 'deleteContentForward': {\r\n            Editor.deleteForward(editor)\r\n            break\r\n          }\r\n\r\n          case 'deleteContentBackward': {\r\n            Editor.deleteBackward(editor)\r\n            break\r\n          }\r\n\r\n          case 'deleteEntireSoftLine': {\r\n            Editor.deleteBackward(editor, { unit: 'line' })\r\n            Editor.deleteForward(editor, { unit: 'line' })\r\n            break\r\n          }\r\n\r\n          case 'deleteHardLineBackward': {\r\n            Editor.deleteBackward(editor, { unit: 'block' })\r\n            break\r\n          }\r\n\r\n          case 'deleteSoftLineBackward': {\r\n            Editor.deleteBackward(editor, { unit: 'line' })\r\n            break\r\n          }\r\n\r\n          case 'deleteHardLineForward': {\r\n            Editor.deleteForward(editor, { unit: 'block' })\r\n            break\r\n          }\r\n\r\n          case 'deleteSoftLineForward': {\r\n            Editor.deleteForward(editor, { unit: 'line' })\r\n            break\r\n          }\r\n\r\n          case 'deleteWordBackward': {\r\n            Editor.deleteBackward(editor, { unit: 'word' })\r\n            break\r\n          }\r\n\r\n          case 'deleteWordForward': {\r\n            Editor.deleteForward(editor, { unit: 'word' })\r\n            break\r\n          }\r\n\r\n          case 'insertLineBreak':\r\n          case 'insertParagraph': {\r\n            Editor.insertBreak(editor)\r\n            break\r\n          }\r\n\r\n          case 'insertFromComposition':\r\n          case 'insertFromDrop':\r\n          case 'insertFromPaste':\r\n          case 'insertFromYank':\r\n          case 'insertReplacementText':\r\n          case 'insertText': {\r\n            if (data instanceof DataTransfer) {\r\n              ReactEditor.insertData(editor, data)\r\n            } else if (typeof data === 'string') {\r\n              Editor.insertText(editor, data)\r\n            }\r\n\r\n            break\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [readOnly]\r\n  )\r\n\r\n  // Attach a native DOM event handler for `beforeinput` events, because React's\r\n  // built-in `onBeforeInput` is actually a leaky polyfill that doesn't expose\r\n  // real `beforeinput` events sadly... (2019/11/04)\r\n  // https://github.com/facebook/react/issues/11211\r\n  useIsomorphicLayoutEffect(() => {\r\n    if (ref.current) {\r\n      // @ts-ignore The `beforeinput` event isn't recognized.\r\n      ref.current.addEventListener('beforeinput', onDOMBeforeInput)\r\n    }\r\n\r\n    return () => {\r\n      if (ref.current) {\r\n        // @ts-ignore The `beforeinput` event isn't recognized.\r\n        ref.current.removeEventListener('beforeinput', onDOMBeforeInput)\r\n      }\r\n    }\r\n  }, [onDOMBeforeInput])\r\n\r\n  // Listen on the native `selectionchange` event to be able to update any time\r\n  // the selection changes. This is required because React's `onSelect` is leaky\r\n  // and non-standard so it doesn't fire until after a selection has been\r\n  // released. This causes issues in situations where another change happens\r\n  // while a selection is being dragged.\r\n  const onDOMSelectionChange = useCallback(\r\n    throttle(() => {\r\n      if (!readOnly && !state.isComposing && !state.isUpdatingSelection) {\r\n        const { activeElement } = window.document\r\n        const el = ReactEditor.toDOMNode(editor, editor)\r\n        if (!el) {\r\n          return\r\n        }\r\n        const domSelection = window.getSelection()\r\n        const domRange =\r\n          domSelection &&\r\n          domSelection.rangeCount > 0 &&\r\n          domSelection.getRangeAt(0)\r\n\r\n        if (activeElement === el) {\r\n          state.latestElement = activeElement\r\n          IS_FOCUSED.set(editor, true)\r\n        } else {\r\n          IS_FOCUSED.delete(editor)\r\n        }\r\n\r\n        if (\r\n          domRange &&\r\n          hasEditableTarget(editor, domRange.startContainer) &&\r\n          hasEditableTarget(editor, domRange.endContainer)\r\n        ) {\r\n          const range = ReactEditor.toSlateRange(editor, domRange)\r\n          if (range) {\r\n            Transforms.select(editor, range)\r\n          }\r\n        } else {\r\n          Transforms.deselect(editor)\r\n        }\r\n      }\r\n    }, 100),\r\n    [readOnly]\r\n  )\r\n\r\n  // Attach a native DOM event handler for `selectionchange`, because React's\r\n  // built-in `onSelect` handler doesn't fire for all selection changes. It's a\r\n  // leaky polyfill that only fires on keypresses or clicks. Instead, we want to\r\n  // fire for any change to the selection inside the editor. (2019/11/04)\r\n  // https://github.com/facebook/react/issues/5785\r\n  useIsomorphicLayoutEffect(() => {\r\n    window.document.addEventListener('selectionchange', onDOMSelectionChange)\r\n\r\n    return () => {\r\n      window.document.removeEventListener(\r\n        'selectionchange',\r\n        onDOMSelectionChange\r\n      )\r\n    }\r\n  }, [onDOMSelectionChange])\r\n\r\n  const decorations = decorate([editor, []])\r\n\r\n  if (\r\n    placeholder &&\r\n    editor.children.length === 1 &&\r\n    Array.from(Node.texts(editor)).length === 1 &&\r\n    Node.string(editor) === ''\r\n  ) {\r\n    const start = Editor.start(editor, [])\r\n    decorations.push({\r\n      [PLACEHOLDER_SYMBOL]: true,\r\n      placeholder,\r\n      anchor: start,\r\n      focus: start,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ReadOnlyContext.Provider value={readOnly}>\r\n      <Component\r\n        // COMPAT: The Grammarly Chrome extension works by changing the DOM\r\n        // out from under `contenteditable` elements, which leads to weird\r\n        // behaviors so we have to disable it like editor. (2017/04/24)\r\n        data-gramm={false}\r\n        role={readOnly ? undefined : 'textbox'}\r\n        {...attributes}\r\n        // COMPAT: Certain browsers don't support the `beforeinput` event, so we'd\r\n        // have to use hacks to make these replacement-based features work.\r\n        spellCheck={\r\n          !HAS_BEFORE_INPUT_SUPPORT ? undefined : attributes.spellCheck\r\n        }\r\n        autoCorrect={\r\n          !HAS_BEFORE_INPUT_SUPPORT ? undefined : attributes.autoCorrect\r\n        }\r\n        autoCapitalize={\r\n          !HAS_BEFORE_INPUT_SUPPORT ? undefined : attributes.autoCapitalize\r\n        }\r\n        data-slate-editor\r\n        data-slate-node=\"value\"\r\n        contentEditable={readOnly ? undefined : true}\r\n        suppressContentEditableWarning\r\n        ref={ref}\r\n        style={{\r\n          // Prevent the default outline styles.\r\n          outline: 'none',\r\n          // Preserve adjacent whitespace and new lines.\r\n          whiteSpace: 'pre-wrap',\r\n          // Allow words to break if they are too long.\r\n          wordWrap: 'break-word',\r\n          // Allow for passed-in styles to override anything.\r\n          ...style,\r\n        }}\r\n        onBeforeInput={useCallback(\r\n          (event: React.FormEvent<HTMLDivElement>) => {\r\n            // COMPAT: Certain browsers don't support the `beforeinput` event, so we\r\n            // fall back to React's leaky polyfill instead just for it. It\r\n            // only works for the `insertText` input type.\r\n            if (\r\n              !HAS_BEFORE_INPUT_SUPPORT &&\r\n              !readOnly &&\r\n              !isEventHandled(event, attributes.onBeforeInput) &&\r\n              hasEditableTarget(editor, event.target)\r\n            ) {\r\n              event.preventDefault()\r\n              const text = (event as any).data as string\r\n              Editor.insertText(editor, text)\r\n            }\r\n          },\r\n          [readOnly]\r\n        )}\r\n        onBlur={useCallback(\r\n          (event: React.FocusEvent<HTMLDivElement>) => {\r\n            if (\r\n              readOnly ||\r\n              state.isUpdatingSelection ||\r\n              !hasEditableTarget(editor, event.target) ||\r\n              isEventHandled(event, attributes.onBlur)\r\n            ) {\r\n              return\r\n            }\r\n\r\n            // COMPAT: If the current `activeElement` is still the previous\r\n            // one, this is due to the window being blurred when the tab\r\n            // itself becomes unfocused, so we want to abort early to allow to\r\n            // editor to stay focused when the tab becomes focused again.\r\n            if (state.latestElement === window.document.activeElement) {\r\n              return\r\n            }\r\n\r\n            const { relatedTarget } = event\r\n            const el = ReactEditor.toDOMNode(editor, editor)\r\n            if (!el) {\r\n              return\r\n            }\r\n\r\n            // COMPAT: The event should be ignored if the focus is returning\r\n            // to the editor from an embedded editable element (eg. an <input>\r\n            // element inside a void node).\r\n            if (relatedTarget === el) {\r\n              return\r\n            }\r\n\r\n            // COMPAT: The event should be ignored if the focus is moving from\r\n            // the editor to inside a void node's spacer element.\r\n            if (\r\n              isDOMElement(relatedTarget) &&\r\n              relatedTarget.hasAttribute('data-slate-spacer')\r\n            ) {\r\n              return\r\n            }\r\n\r\n            // COMPAT: The event should be ignored if the focus is moving to a\r\n            // non- editable section of an element that isn't a void node (eg.\r\n            // a list item of the check list example).\r\n            if (\r\n              relatedTarget != null &&\r\n              isDOMNode(relatedTarget) &&\r\n              ReactEditor.hasDOMNode(editor, relatedTarget)\r\n            ) {\r\n              const node = ReactEditor.toSlateNode(editor, relatedTarget)\r\n\r\n              if (Element.isElement(node) && !editor.isVoid(node)) {\r\n                return\r\n              }\r\n            }\r\n\r\n            IS_FOCUSED.delete(editor)\r\n          },\r\n          [readOnly, attributes.onBlur]\r\n        )}\r\n        onClick={useCallback(\r\n          (event: React.MouseEvent<HTMLDivElement>) => {\r\n            if (\r\n              !readOnly &&\r\n              hasTarget(editor, event.target) &&\r\n              !isEventHandled(event, attributes.onClick) &&\r\n              isDOMNode(event.target)\r\n            ) {\r\n              const node = ReactEditor.toSlateNode(editor, event.target)\r\n              if (!node) {\r\n                return\r\n              }\r\n              const path = ReactEditor.findPath(editor, node)\r\n              const start = Editor.start(editor, path)\r\n              const end = Editor.end(editor, path)\r\n              const startVoid = Editor.void(editor, { at: start })\r\n              const endVoid = Editor.void(editor, { at: end })\r\n              if (\r\n                startVoid &&\r\n                endVoid &&\r\n                Path.equals(startVoid[1], endVoid[1])\r\n              ) {\r\n                const range = Editor.range(editor, start)\r\n                Transforms.select(editor, range)\r\n              }\r\n            }\r\n          },\r\n          [readOnly, attributes.onClick]\r\n        )}\r\n        onCompositionEnd={useCallback(\r\n          (event: React.CompositionEvent<HTMLDivElement>) => {\r\n            if (\r\n              hasEditableTarget(editor, event.target) &&\r\n              !isEventHandled(event, attributes.onCompositionEnd)\r\n            ) {\r\n              state.isComposing = false\r\n\r\n              // COMPAT: In Chrome, `beforeinput` events for compositions\r\n              // aren't correct and never fire the \"insertFromComposition\"\r\n              // type that we need. So instead, insert whenever a composition\r\n              // ends since it will already have been committed to the DOM.\r\n              if (!IS_SAFARI && !IS_FIREFOX && event.data) {\r\n                Editor.insertText(editor, event.data)\r\n              }\r\n            }\r\n          },\r\n          [attributes.onCompositionEnd]\r\n        )}\r\n        onCompositionStart={useCallback(\r\n          (event: React.CompositionEvent<HTMLDivElement>) => {\r\n            if (\r\n              hasEditableTarget(editor, event.target) &&\r\n              !isEventHandled(event, attributes.onCompositionStart)\r\n            ) {\r\n              state.isComposing = true\r\n            }\r\n          },\r\n          [attributes.onCompositionStart]\r\n        )}\r\n        onCopy={useCallback(\r\n          (event: React.ClipboardEvent<HTMLDivElement>) => {\r\n            if (\r\n              hasEditableTarget(editor, event.target) &&\r\n              !isEventHandled(event, attributes.onCopy)\r\n            ) {\r\n              event.preventDefault()\r\n              ReactEditor.setFragmentData(editor, event.clipboardData)\r\n            }\r\n          },\r\n          [attributes.onCopy]\r\n        )}\r\n        onCut={useCallback(\r\n          (event: React.ClipboardEvent<HTMLDivElement>) => {\r\n            if (\r\n              !readOnly &&\r\n              hasEditableTarget(editor, event.target) &&\r\n              !isEventHandled(event, attributes.onCut)\r\n            ) {\r\n              event.preventDefault()\r\n              ReactEditor.setFragmentData(editor, event.clipboardData)\r\n              const { selection } = editor\r\n\r\n              if (selection && Range.isExpanded(selection)) {\r\n                Editor.deleteFragment(editor)\r\n              }\r\n            }\r\n          },\r\n          [readOnly, attributes.onCut]\r\n        )}\r\n        onDragOver={useCallback(\r\n          (event: React.DragEvent<HTMLDivElement>) => {\r\n            if (\r\n              hasTarget(editor, event.target) &&\r\n              !isEventHandled(event, attributes.onDragOver)\r\n            ) {\r\n              // Only when the target is void, call `preventDefault` to signal\r\n              // that drops are allowed. Editable content is droppable by\r\n              // default, and calling `preventDefault` hides the cursor.\r\n              const node = ReactEditor.toSlateNode(editor, event.target)\r\n\r\n              if (Editor.isVoid(editor, node)) {\r\n                event.preventDefault()\r\n              }\r\n            }\r\n          },\r\n          [attributes.onDragOver]\r\n        )}\r\n        onDragStart={useCallback(\r\n          (event: React.DragEvent<HTMLDivElement>) => {\r\n            if (\r\n              hasTarget(editor, event.target) &&\r\n              !isEventHandled(event, attributes.onDragStart)\r\n            ) {\r\n              const node = ReactEditor.toSlateNode(editor, event.target)\r\n              if (!node) {\r\n                return\r\n              }\r\n              const path = ReactEditor.findPath(editor, node)\r\n              const voidMatch = Editor.void(editor, { at: path })\r\n\r\n              // If starting a drag on a void node, make sure it is selected\r\n              // so that it shows up in the selection's fragment.\r\n              if (voidMatch) {\r\n                const range = Editor.range(editor, path)\r\n                Transforms.select(editor, range)\r\n              }\r\n\r\n              ReactEditor.setFragmentData(editor, event.dataTransfer)\r\n            }\r\n          },\r\n          [attributes.onDragStart]\r\n        )}\r\n        onDrop={useCallback(\r\n          (event: React.DragEvent<HTMLDivElement>) => {\r\n            if (\r\n              hasTarget(editor, event.target) &&\r\n              !readOnly &&\r\n              !isEventHandled(event, attributes.onDrop)\r\n            ) {\r\n              // COMPAT: Certain browsers don't fire `beforeinput` events at all, and\r\n              // Chromium browsers don't properly fire them for files being\r\n              // dropped into a `contenteditable`. (2019/11/26)\r\n              // https://bugs.chromium.org/p/chromium/issues/detail?id=1028668\r\n              if (\r\n                !HAS_BEFORE_INPUT_SUPPORT ||\r\n                (!IS_SAFARI && event.dataTransfer.files.length > 0)\r\n              ) {\r\n                event.preventDefault()\r\n                const range = ReactEditor.findEventRange(editor, event)\r\n                if (!range) {\r\n                  return\r\n                }\r\n                const data = event.dataTransfer\r\n                Transforms.select(editor, range)\r\n                ReactEditor.insertData(editor, data)\r\n              }\r\n            }\r\n          },\r\n          [readOnly, attributes.onDrop]\r\n        )}\r\n        onFocus={useCallback(\r\n          (event: React.FocusEvent<HTMLDivElement>) => {\r\n            if (\r\n              !readOnly &&\r\n              !state.isUpdatingSelection &&\r\n              hasEditableTarget(editor, event.target) &&\r\n              !isEventHandled(event, attributes.onFocus)\r\n            ) {\r\n              const el = ReactEditor.toDOMNode(editor, editor)\r\n              if (!el) {\r\n                return\r\n              }\r\n              state.latestElement = window.document.activeElement\r\n\r\n              // COMPAT: If the editor has nested editable elements, the focus\r\n              // can go to them. In Firefox, this must be prevented because it\r\n              // results in issues with keyboard navigation. (2017/03/30)\r\n              if (IS_FIREFOX && event.target !== el) {\r\n                el.focus()\r\n                return\r\n              }\r\n\r\n              IS_FOCUSED.set(editor, true)\r\n            }\r\n          },\r\n          [readOnly, attributes.onFocus]\r\n        )}\r\n        onKeyDown={useCallback(\r\n          (event: React.KeyboardEvent<HTMLDivElement>) => {\r\n            if (\r\n              !readOnly &&\r\n              hasEditableTarget(editor, event.target) &&\r\n              !isEventHandled(event, attributes.onKeyDown)\r\n            ) {\r\n              const { nativeEvent } = event\r\n              const { selection } = editor\r\n\r\n              // COMPAT: Since we prevent the default behavior on\r\n              // `beforeinput` events, the browser doesn't think there's ever\r\n              // any history stack to undo or redo, so we have to manage these\r\n              // hotkeys ourselves. (2019/11/06)\r\n              if (Hotkeys.isRedo(nativeEvent)) {\r\n                event.preventDefault()\r\n\r\n                if (editor.redo) {\r\n                  editor.redo()\r\n                }\r\n\r\n                return\r\n              }\r\n\r\n              if (Hotkeys.isUndo(nativeEvent)) {\r\n                event.preventDefault()\r\n\r\n                if (editor.undo) {\r\n                  editor.undo()\r\n                }\r\n\r\n                return\r\n              }\r\n\r\n              // COMPAT: Certain browsers don't handle the selection updates\r\n              // properly. In Chrome, the selection isn't properly extended.\r\n              // And in Firefox, the selection isn't properly collapsed.\r\n              // (2017/10/17)\r\n              if (Hotkeys.isMoveLineBackward(nativeEvent)) {\r\n                event.preventDefault()\r\n                Transforms.move(editor, { unit: 'line', reverse: true })\r\n                return\r\n              }\r\n\r\n              if (Hotkeys.isMoveLineForward(nativeEvent)) {\r\n                event.preventDefault()\r\n                Transforms.move(editor, { unit: 'line' })\r\n                return\r\n              }\r\n\r\n              if (Hotkeys.isExtendLineBackward(nativeEvent)) {\r\n                event.preventDefault()\r\n                Transforms.move(editor, {\r\n                  unit: 'line',\r\n                  edge: 'focus',\r\n                  reverse: true,\r\n                })\r\n                return\r\n              }\r\n\r\n              if (Hotkeys.isExtendLineForward(nativeEvent)) {\r\n                event.preventDefault()\r\n                Transforms.move(editor, { unit: 'line', edge: 'focus' })\r\n                return\r\n              }\r\n\r\n              // COMPAT: If a void node is selected, or a zero-width text node\r\n              // adjacent to an inline is selected, we need to handle these\r\n              // hotkeys manually because browsers won't be able to skip over\r\n              // the void node with the zero-width space not being an empty\r\n              // string.\r\n              if (Hotkeys.isMoveBackward(nativeEvent)) {\r\n                event.preventDefault()\r\n\r\n                if (selection && Range.isCollapsed(selection)) {\r\n                  Transforms.move(editor, { reverse: true })\r\n                } else {\r\n                  Transforms.collapse(editor, { edge: 'start' })\r\n                }\r\n\r\n                return\r\n              }\r\n\r\n              if (Hotkeys.isMoveForward(nativeEvent)) {\r\n                event.preventDefault()\r\n\r\n                if (selection && Range.isCollapsed(selection)) {\r\n                  Transforms.move(editor)\r\n                } else {\r\n                  Transforms.collapse(editor, { edge: 'end' })\r\n                }\r\n\r\n                return\r\n              }\r\n\r\n              if (Hotkeys.isMoveWordBackward(nativeEvent)) {\r\n                event.preventDefault()\r\n                Transforms.move(editor, { unit: 'word', reverse: true })\r\n                return\r\n              }\r\n\r\n              if (Hotkeys.isMoveWordForward(nativeEvent)) {\r\n                event.preventDefault()\r\n                Transforms.move(editor, { unit: 'word' })\r\n                return\r\n              }\r\n\r\n              // COMPAT: Certain browsers don't support the `beforeinput` event, so we\r\n              // fall back to guessing at the input intention for hotkeys.\r\n              // COMPAT: In iOS, some of these hotkeys are handled in the\r\n              if (!HAS_BEFORE_INPUT_SUPPORT) {\r\n                // We don't have a core behavior for these, but they change the\r\n                // DOM if we don't prevent them, so we have to.\r\n                if (\r\n                  Hotkeys.isBold(nativeEvent) ||\r\n                  Hotkeys.isItalic(nativeEvent) ||\r\n                  Hotkeys.isTransposeCharacter(nativeEvent)\r\n                ) {\r\n                  event.preventDefault()\r\n                  return\r\n                }\r\n\r\n                if (Hotkeys.isSplitBlock(nativeEvent)) {\r\n                  event.preventDefault()\r\n                  Editor.insertBreak(editor)\r\n                  return\r\n                }\r\n\r\n                if (Hotkeys.isDeleteBackward(nativeEvent)) {\r\n                  event.preventDefault()\r\n\r\n                  if (selection && Range.isExpanded(selection)) {\r\n                    Editor.deleteFragment(editor)\r\n                  } else {\r\n                    Editor.deleteBackward(editor)\r\n                  }\r\n\r\n                  return\r\n                }\r\n\r\n                if (Hotkeys.isDeleteForward(nativeEvent)) {\r\n                  event.preventDefault()\r\n\r\n                  if (selection && Range.isExpanded(selection)) {\r\n                    Editor.deleteFragment(editor)\r\n                  } else {\r\n                    Editor.deleteForward(editor)\r\n                  }\r\n\r\n                  return\r\n                }\r\n\r\n                if (Hotkeys.isDeleteLineBackward(nativeEvent)) {\r\n                  event.preventDefault()\r\n\r\n                  if (selection && Range.isExpanded(selection)) {\r\n                    Editor.deleteFragment(editor)\r\n                  } else {\r\n                    Editor.deleteBackward(editor, { unit: 'line' })\r\n                  }\r\n\r\n                  return\r\n                }\r\n\r\n                if (Hotkeys.isDeleteLineForward(nativeEvent)) {\r\n                  event.preventDefault()\r\n\r\n                  if (selection && Range.isExpanded(selection)) {\r\n                    Editor.deleteFragment(editor)\r\n                  } else {\r\n                    Editor.deleteForward(editor, { unit: 'line' })\r\n                  }\r\n\r\n                  return\r\n                }\r\n\r\n                if (Hotkeys.isDeleteWordBackward(nativeEvent)) {\r\n                  event.preventDefault()\r\n\r\n                  if (selection && Range.isExpanded(selection)) {\r\n                    Editor.deleteFragment(editor)\r\n                  } else {\r\n                    Editor.deleteBackward(editor, { unit: 'word' })\r\n                  }\r\n\r\n                  return\r\n                }\r\n\r\n                if (Hotkeys.isDeleteWordForward(nativeEvent)) {\r\n                  event.preventDefault()\r\n\r\n                  if (selection && Range.isExpanded(selection)) {\r\n                    Editor.deleteFragment(editor)\r\n                  } else {\r\n                    Editor.deleteForward(editor, { unit: 'word' })\r\n                  }\r\n\r\n                  return\r\n                }\r\n              }\r\n            }\r\n          },\r\n          [readOnly, attributes.onKeyDown]\r\n        )}\r\n        onPaste={useCallback(\r\n          (event: React.ClipboardEvent<HTMLDivElement>) => {\r\n            // COMPAT: Certain browsers don't support the `beforeinput` event, so we\r\n            // fall back to React's `onPaste` here instead.\r\n            // COMPAT: Firefox, Chrome and Safari are not emitting `beforeinput` events\r\n            // when \"paste without formatting\" option is used.\r\n            // This unfortunately needs to be handled with paste events instead.\r\n            if (\r\n              !isEventHandled(event, attributes.onPaste) &&\r\n              (!HAS_BEFORE_INPUT_SUPPORT ||\r\n                isPlainTextOnlyPaste(event.nativeEvent)) &&\r\n              !readOnly &&\r\n              hasEditableTarget(editor, event.target)\r\n            ) {\r\n              event.preventDefault()\r\n              ReactEditor.insertData(editor, event.clipboardData)\r\n            }\r\n          },\r\n          [readOnly, attributes.onPaste]\r\n        )}\r\n      >\r\n        <Children\r\n          decorate={decorate}\r\n          decorations={decorations}\r\n          node={editor}\r\n          renderElement={renderElement}\r\n          renderLeaf={renderLeaf}\r\n          selection={editor.selection}\r\n        />\r\n      </Component>\r\n    </ReadOnlyContext.Provider>\r\n  )\r\n}\r\n\r\n/**\r\n * A default memoized decorate function.\r\n */\r\n\r\nconst defaultDecorate = () => []\r\n\r\n/**\r\n * Check if two DOM range objects are equal.\r\n */\r\n\r\nconst isRangeEqual = (a: DOMRange, b: DOMRange) => {\r\n  return (\r\n    (a.startContainer === b.startContainer &&\r\n      a.startOffset === b.startOffset &&\r\n      a.endContainer === b.endContainer &&\r\n      a.endOffset === b.endOffset) ||\r\n    (a.startContainer === b.endContainer &&\r\n      a.startOffset === b.endOffset &&\r\n      a.endContainer === b.startContainer &&\r\n      a.endOffset === b.startOffset)\r\n  )\r\n}\r\n\r\n/**\r\n * Check if the target is in the editor.\r\n */\r\n\r\nconst hasTarget = (\r\n  editor: ReactEditor,\r\n  target: EventTarget | null\r\n): target is DOMNode => {\r\n  return isDOMNode(target) && ReactEditor.hasDOMNode(editor, target)\r\n}\r\n\r\n/**\r\n * Check if the target is editable and in the editor.\r\n */\r\n\r\nconst hasEditableTarget = (\r\n  editor: ReactEditor,\r\n  target: EventTarget | null\r\n): target is DOMNode => {\r\n  return (\r\n    isDOMNode(target) &&\r\n    ReactEditor.hasDOMNode(editor, target, { editable: true })\r\n  )\r\n}\r\n\r\n/**\r\n * Check if an event is overrided by a handler.\r\n */\r\n\r\nconst isEventHandled = <\r\n  EventType extends React.SyntheticEvent<unknown, unknown>\r\n>(\r\n  event: EventType,\r\n  handler?: (event: EventType) => void\r\n) => {\r\n  if (!handler) {\r\n    return false\r\n  }\r\n\r\n  handler(event)\r\n  return event.isDefaultPrevented() || event.isPropagationStopped()\r\n}\r\n\r\n/**\r\n * Check if a DOM event is overrided by a handler.\r\n */\r\n\r\nconst isDOMEventHandled = (event: Event, handler?: (event: Event) => void) => {\r\n  if (!handler) {\r\n    return false\r\n  }\r\n\r\n  handler(event)\r\n  return event.defaultPrevented\r\n}\r\n\r\n/**\r\n * Set the currently selected fragment to the clipboard.\r\n */\r\n\r\nconst setFragmentData = (\r\n  dataTransfer: DataTransfer,\r\n  editor: ReactEditor\r\n): void => {\r\n  const { selection } = editor\r\n\r\n  if (!selection) {\r\n    return\r\n  }\r\n\r\n  const [start, end] = Range.edges(selection)\r\n  const startVoid = Editor.void(editor, { at: start.path })\r\n  const endVoid = Editor.void(editor, { at: end.path })\r\n\r\n  if (Range.isCollapsed(selection) && !startVoid) {\r\n    return\r\n  }\r\n\r\n  // Create a fake selection so that we can add a Base64-encoded copy of the\r\n  // fragment to the HTML, to decode on future pastes.\r\n  const domRange = ReactEditor.toDOMRange(editor, selection)\r\n  if (!domRange) {\r\n    return\r\n  }\r\n  let contents = domRange.cloneContents()\r\n  let attach = contents.childNodes[0] as HTMLElement\r\n\r\n  // Make sure attach is non-empty, since empty nodes will not get copied.\r\n  contents.childNodes.forEach(node => {\r\n    if (node.textContent && node.textContent.trim() !== '') {\r\n      attach = node as HTMLElement\r\n    }\r\n  })\r\n\r\n  // COMPAT: If the end node is a void node, we need to move the end of the\r\n  // range from the void node's spacer span, to the end of the void node's\r\n  // content, since the spacer is before void's content in the DOM.\r\n  if (endVoid) {\r\n    const [voidNode] = endVoid\r\n    const r = domRange.cloneRange()\r\n    const domNode = ReactEditor.toDOMNode(editor, voidNode)\r\n    if (domNode) {\r\n      r.setEndAfter(domNode)\r\n      contents = r.cloneContents()\r\n    }\r\n  }\r\n\r\n  // COMPAT: If the start node is a void node, we need to attach the encoded\r\n  // fragment to the void node's content node instead of the spacer, because\r\n  // attaching it to empty `<div>/<span>` nodes will end up having it erased by\r\n  // most browsers. (2018/04/27)\r\n  if (startVoid) {\r\n    attach = contents.querySelector('[data-slate-spacer]')! as HTMLElement\r\n  }\r\n\r\n  // Remove any zero-width space spans from the cloned DOM so that they don't\r\n  // show up elsewhere when pasted.\r\n  Array.from(contents.querySelectorAll('[data-slate-zero-width]')).forEach(\r\n    zw => {\r\n      const isNewline = zw.getAttribute('data-slate-zero-width') === 'n'\r\n      zw.textContent = isNewline ? '\\n' : ''\r\n    }\r\n  )\r\n\r\n  // Set a `data-slate-fragment` attribute on a non-empty node, so it shows up\r\n  // in the HTML, and can be used for intra-Slate pasting. If it's a text\r\n  // node, wrap it in a `<span>` so we have something to set an attribute on.\r\n  if (isDOMText(attach)) {\r\n    const span = document.createElement('span')\r\n    // COMPAT: In Chrome and Safari, if we don't add the `white-space` style\r\n    // then leading and trailing spaces will be ignored. (2017/09/21)\r\n    span.style.whiteSpace = 'pre'\r\n    span.appendChild(attach)\r\n    contents.appendChild(span)\r\n    attach = span\r\n  }\r\n\r\n  const fragment = Node.fragment(editor, selection)\r\n  const string = JSON.stringify(fragment)\r\n  const encoded = window.btoa(encodeURIComponent(string))\r\n  attach.setAttribute('data-slate-fragment', encoded)\r\n  dataTransfer.setData('application/x-slate-fragment', encoded)\r\n\r\n  // Add the content to a <div> so that we can get its inner HTML.\r\n  const div = document.createElement('div')\r\n  div.appendChild(contents)\r\n  div.setAttribute('hidden', 'true')\r\n  document.body.appendChild(div)\r\n  dataTransfer.setData('text/html', div.innerHTML)\r\n  dataTransfer.setData('text/plain', getPlainText(div))\r\n  document.body.removeChild(div)\r\n}\r\n\r\n/**\r\n * Get a plaintext representation of the content of a node, accounting for block\r\n * elements which get a newline appended.\r\n *\r\n * The domNode must be attached to the DOM.\r\n */\r\n\r\nconst getPlainText = (domNode: DOMNode) => {\r\n  let text = ''\r\n\r\n  if (isDOMText(domNode) && domNode.nodeValue) {\r\n    return domNode.nodeValue\r\n  }\r\n\r\n  if (isDOMElement(domNode)) {\r\n    for (const childNode of Array.from(domNode.childNodes)) {\r\n      text += getPlainText(childNode)\r\n    }\r\n\r\n    const display = getComputedStyle(domNode).getPropertyValue('display')\r\n\r\n    if (display === 'block' || display === 'list' || domNode.tagName === 'BR') {\r\n      text += '\\n'\r\n    }\r\n  }\r\n\r\n  return text\r\n}\r\n"],"names":["objectWithoutPropertiesLoose","n","Key","constructor","id","NODE_TO_INDEX","WeakMap","NODE_TO_PARENT","EDITOR_TO_ELEMENT","ELEMENT_TO_NODE","KEY_TO_ELEMENT","NODE_TO_ELEMENT","NODE_TO_KEY","IS_READ_ONLY","IS_FOCUSED","EDITOR_TO_ON_CHANGE","PLACEHOLDER_SYMBOL","Symbol","isDOMComment","value","isDOMNode","nodeType","isDOMElement","Node","isDOMText","isPlainTextOnlyPaste","event","clipboardData","getData","types","length","normalizeDOMPoint","domPoint","node","offset","childNodes","isLast","direction","index","getEditableChild","i","textContent","parent","child","triedForward","triedBackward","getAttribute","getPlainText","domNode","text","nodeValue","childNode","Array","from","display","getComputedStyle","getPropertyValue","tagName","ReactEditor","findKey","editor","key","get","set","findPath","path","Editor","isEditor","unshift","Error","JSON","stringify","isFocused","isReadOnly","blur","el","toDOMNode","window","document","activeElement","focus","preventScroll","deselect","selection","domSelection","getSelection","rangeCount","removeAllRanges","Transforms","hasDOMNode","target","options","editable","editorEl","targetEl","parentElement","err","message","includes","closest","isContentEditable","insertData","data","setFragmentData","toDOMPoint","point","void","at","selector","texts","querySelectorAll","start","attr","trueLength","parseInt","end","Math","min","max","toDOMRange","range","anchor","domAnchor","domFocus","Range","isCollapsed","domRange","createRange","isBackward","setStart","setEnd","toSlateNode","domEl","hasAttribute","findEventRange","nativeEvent","clientX","x","clientY","y","isVoid","rect","getBoundingClientRect","isPrev","isInline","left","width","top","height","edge","before","after","caretRangeFromPoint","position","caretPositionFromPoint","offsetNode","toSlateRange","toSlatePoint","nearestNode","nearestOffset","parentNode","textNode","voidNode","leafNode","contents","cloneContents","removals","forEach","removeChild","querySelector","slateNode","Selection","anchorNode","startContainer","anchorOffset","focusNode","focusOffset","startOffset","endContainer","endOffset","collapsed","FocusedContext","createContext","useFocused","useContext","EditorContext","useEditor","SlateContext","useSlate","context","Slate","props","children","onChange","rest","setKey","useState","useMemo","Object","assign","values","onContextChange","useCallback","React","Provider","ReadOnlyContext","useReadOnly","SelectedContext","useSelected","withReact","e","apply","op","matches","type","levels","push","Path","edges","startVoid","endVoid","attach","trim","r","cloneRange","setEndAfter","zw","isNewline","span","createElement","style","whiteSpace","appendChild","fragment","getFragment","string","encoded","btoa","encodeURIComponent","setAttribute","setData","div","body","innerHTML","decoded","decodeURIComponent","atob","parsed","parse","insertFragment","lines","split","line","splitNodes","always","insertText","ReactDOM","unstable_batchedUpdates","String","leaf","parentPath","ZeroWidthString","isLineBreak","slice","TextString","isTrailing","Leaf","renderLeaf","DefaultLeaf","Fragment","contentEditable","pointerEvents","verticalAlign","maxWidth","opacity","userSelect","placeholder","attributes","MemoizedLeaf","memo","prev","next","Text","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","decorations","ref","useRef","leaves","SlateText","current","delete","MemoizedText","Element","decorate","element","renderElement","p","DefaultElement","readOnly","Children","hasInlines","dir","getDirection","Tag","color","outline","MemoizedElement","isRangeListEqual","equals","list","another","other","isLeafBlock","isElement","concat","sel","intersection","ds","dec","d","ElementComponent","TextComponent","IS_IOS","navigator","test","userAgent","MSStream","IS_APPLE","IS_FIREFOX","IS_SAFARI","IS_EDGE_LEGACY","HOTKEYS","bold","compose","moveBackward","moveForward","moveWordBackward","moveWordForward","deleteBackward","deleteForward","extendBackward","extendForward","italic","splitBlock","undo","APPLE_HOTKEYS","moveLineBackward","moveLineForward","deleteLineBackward","deleteLineForward","deleteWordBackward","deleteWordForward","extendLineBackward","extendLineForward","redo","transposeCharacter","WINDOWS_HOTKEYS","create","generic","apple","windows","isGeneric","isKeyHotkey","isApple","isWindows","isBold","isCompose","isMoveBackward","isMoveForward","isDeleteBackward","isDeleteForward","isDeleteLineBackward","isDeleteLineForward","isDeleteWordBackward","isDeleteWordForward","isExtendBackward","isExtendForward","isExtendLineBackward","isExtendLineForward","isItalic","isMoveLineBackward","isMoveLineForward","isMoveWordBackward","isMoveWordForward","isRedo","isSplitBlock","isTransposeCharacter","isUndo","HAS_BEFORE_INPUT_SUPPORT","Editable","autoFocus","defaultDecorate","onDOMBeforeInput","propsOnDOMBeforeInput","as","Component","state","isComposing","isUpdatingSelection","latestElement","hasDomSelection","newDomRange","isRangeEqual","getRangeAt","addRange","leafEl","setTimeout","hasEditableTarget","isDOMEventHandled","inputType","dataTransfer","undefined","preventDefault","startsWith","targetRange","getTargetRanges","select","isExpanded","deleteFragment","unit","insertBreak","DataTransfer","addEventListener","removeEventListener","onDOMSelectionChange","throttle","role","spellCheck","autoCorrect","autoCapitalize","suppressContentEditableWarning","wordWrap","onBeforeInput","isEventHandled","onBlur","relatedTarget","onClick","hasTarget","onCompositionEnd","onCompositionStart","onCopy","onCut","onDragOver","onDragStart","voidMatch","onDrop","files","onFocus","onKeyDown","Hotkeys","move","reverse","collapse","onPaste","a","b","handler","isDefaultPrevented","isPropagationStopped","defaultPrevented"],"mappings":"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"}